1728523905
ijeqzL8hUX%3A8bddbe460369d95b058efcdba6048a0b-f5e6c68c6d05f01aee8889a5a26327db
s:144764:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImY1ZTZjNjhjNmQwNWYwMWFlZTg4ODlhNWEyNjMyN2RiIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6ImNsYXNzLXNpdGUtaGVhbHRoLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjM2OiJpbmNsdWRlcy9hZG1pbi9jbGFzcy1zaXRlLWhlYWx0aC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjg5ODY4OiI8P3BocApuYW1lc3BhY2UgdW1cYWRtaW47CgppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7CglleGl0Owp9CgovKioKICogQ2xhc3MgU2l0ZV9IZWFsdGgKICoKICogQHBhY2thZ2UgdW1cYWRtaW4KICovCmNsYXNzIFNpdGVfSGVhbHRoIHsKCgkvKioKCSAqIFNpdGVfSGVhbHRoIGNvbnN0cnVjdG9yLgoJICovCglwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoKSB7CgkJYWRkX2ZpbHRlciggJ2RlYnVnX2luZm9ybWF0aW9uJywgYXJyYXkoICR0aGlzLCAnZGVidWdfaW5mb3JtYXRpb24nICksIDIwICk7Cgl9CgoJcHJpdmF0ZSBmdW5jdGlvbiBnZXRfcm9sZXMoKSB7CgkJcmV0dXJuIFVNKCktPnJvbGVzKCktPmdldF9yb2xlcygpOwoJfQoKCXByaXZhdGUgZnVuY3Rpb24gZ2V0X2Zvcm1zKCkgewoJCSRmb3Jtc19kYXRhID0gZ2V0X3Bvc3RzKAoJCQlhcnJheSgKCQkJCSdwb3N0X3R5cGUnICAgICAgPT4gJ3VtX2Zvcm0nLAoJCQkJJ3Bvc3RzX3Blcl9wYWdlJyA9PiAtMSwKCQkJKQoJCSk7CgkJJGZvcm1zICAgICAgPSBhcnJheSgpOwoJCWZvcmVhY2ggKCAkZm9ybXNfZGF0YSBhcyAkZm9ybSApIHsKCQkJJGZvcm1zWyAnSUQjJyAuICRmb3JtLT5JRCBdID0gJGZvcm0tPnBvc3RfdGl0bGU7CgkJfQoJCXJldHVybiAkZm9ybXM7Cgl9CgoJcHJpdmF0ZSBmdW5jdGlvbiBnZXRfcm9sZV9tZXRhKCAka2V5ICkgewoJCXJldHVybiBnZXRfb3B0aW9uKCAidW1fcm9sZV97JGtleX1fbWV0YSIsIGZhbHNlICk7Cgl9CgoJcHVibGljIGZ1bmN0aW9uIGFycmF5X21hcCggJGl0ZW0gKSB7CgkJaWYgKCBpc19hcnJheSggJGl0ZW0gKSApIHsKCQkJJGl0ZW0gPSBtYXliZV9zZXJpYWxpemUoICRpdGVtICk7CgkJfQoJCXJldHVybiAkaXRlbTsKCX0KCglwcml2YXRlIGZ1bmN0aW9uIGdldF9maWVsZF9kYXRhKCAkaW5mbywgJGtleSwgJGZpZWxkX2tleSwgJGZpZWxkICkgewoJCSRyb3cgICAgICAgID0gaXNzZXQoICRmaWVsZFsnbWV0YWtleSddICkgPyBmYWxzZSA6IHRydWU7CgkJJHRpdGxlICAgICAgPSAkcm93ID8gX18oICdSb3c6ICcsICd1bHRpbWF0ZS1tZW1iZXInICkgLiAkZmllbGRbJ2lkJ10gOiBfXyggJ0ZpZWxkOiAnLCAndWx0aW1hdGUtbWVtYmVyJyApIC4gJGZpZWxkWydtZXRha2V5J107CgkJJGZpZWxkICAgICAgPSBhcnJheV9tYXAoIGFycmF5KCAmJHRoaXMsICdhcnJheV9tYXAnICksICRmaWVsZCApOwoJCSRmaWVsZF9pbmZvID0gYXJyYXkoCgkJCSd1bS1maWVsZF8nIC4gJGZpZWxkX2tleSA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gJHRpdGxlLAoJCQkJJ3ZhbHVlJyA9PiAkZmllbGQsCgkJCSksCgkJKTsKCgkJcmV0dXJuICRmaWVsZF9pbmZvOwoJfQoKCXByaXZhdGUgZnVuY3Rpb24gZ2V0X21lbWJlcl9kaXJlY3RvcmllcygpIHsKCQkkcXVlcnkgICAgICAgICAgICAgID0gbmV3IFxXUF9RdWVyeSgpOwoJCSRtZW1iZXJfZGlyZWN0b3JpZXMgPSAkcXVlcnktPnF1ZXJ5KAoJCQlhcnJheSgKCQkJCSdwb3N0X3R5cGUnICAgICAgPT4gJ3VtX2RpcmVjdG9yeScsCgkJCQkncG9zdHNfcGVyX3BhZ2UnID0+IC0xLAoJCQkpCgkJKTsKCgkJJGRpcmVjdG9yaWVzID0gYXJyYXkoKTsKCQlmb3JlYWNoICggJG1lbWJlcl9kaXJlY3RvcmllcyBhcyAkZGlyZWN0b3J5ICkgewoJCQkkZGlyZWN0b3JpZXNbICdJRCMnIC4gJGRpcmVjdG9yeS0+SUQgXSA9ICRkaXJlY3RvcnktPnBvc3RfdGl0bGU7CgkJfQoKCQlyZXR1cm4gJGRpcmVjdG9yaWVzOwoJfQoKCS8qKgoJICogQWRkIG91ciBkYXRhIHRvIFNpdGUgSGVhbHRoIGluZm9ybWF0aW9uLgoJICoKCSAqIEBzaW5jZSAyLjcuMAoJICoKCSAqIEBwYXJhbSBhcnJheSAkaW5mbyBUaGUgU2l0ZSBIZWFsdGggaW5mb3JtYXRpb24uCgkgKgoJICogQHJldHVybiBhcnJheSBUaGUgdXBkYXRlZCBTaXRlIEhlYWx0aCBpbmZvcm1hdGlvbi4KCSAqLwoJcHVibGljIGZ1bmN0aW9uIGRlYnVnX2luZm9ybWF0aW9uKCAkaW5mbyApIHsKCQkkbGFiZWxzID0gYXJyYXkoCgkJCSd5ZXMnICAgICA9PiBfXyggJ1llcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdubycgICAgICA9PiBfXyggJ05vJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2FsbCcgICAgID0+IF9fKCAnQWxsJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2RlZmF1bHQnID0+IF9fKCAnRGVmYXVsdCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdub3BhZ2VzJyA9PiBfXyggJ05vIHByZWRlZmluZWQgcGFnZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJKTsKCgkJJGluZm9bJ3VsdGltYXRlLW1lbWJlciddID0gYXJyYXkoCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdVbHRpbWF0ZSBNZW1iZXInLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknZGVzY3JpcHRpb24nID0+IF9fKCAnVGhpcyBkZWJ1ZyBpbmZvcm1hdGlvbiBmb3IgeW91ciBVbHRpbWF0ZSBNZW1iZXIgaW5zdGFsbGF0aW9uIGNhbiBhc3Npc3QgeW91IGluIGdldHRpbmcgc3VwcG9ydC4nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknZmllbGRzJyAgICAgID0+IGFycmF5KCksCgkJKTsKCgkJLy8gUGFnZXMgc2V0dGluZ3MuCgkJJHBhZ2VzICAgICAgICAgICAgPSBhcnJheSgpOwoJCSRwcmVkZWZpbmVkX3BhZ2VzID0gVU0oKS0+Y29uZmlnKCktPmNvcmVfcGFnZXM7CgkJZm9yZWFjaCAoICRwcmVkZWZpbmVkX3BhZ2VzIGFzICRwYWdlX3MgPT4gJHBhZ2UgKSB7CgkJCSRwYWdlX2lkICAgID0gVU0oKS0+b3B0aW9ucygpLT5nZXRfY29yZV9wYWdlX2lkKCAkcGFnZV9zICk7CgkJCSRwYWdlX3RpdGxlID0gISBlbXB0eSggJHBhZ2VbJ3RpdGxlJ10gKSA/ICRwYWdlWyd0aXRsZSddIDogJyc7CgkJCWlmICggZW1wdHkoICRwYWdlX3RpdGxlICkgKSB7CgkJCQljb250aW51ZTsKCQkJfQoKCQkJJHByZWRlZmluZWRfcGFnZV9pZCA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAkcGFnZV9pZCApOwoKCQkJaWYgKCBlbXB0eSggJHByZWRlZmluZWRfcGFnZV9pZCApICkgewoJCQkJJHBhZ2VzWyAkcGFnZV90aXRsZSBdID0gJGxhYmVsc1snbm9wYWdlcyddOwoJCQkJY29udGludWU7CgkJCX0KCQkJLy8gdHJhbnNsYXRvcnM6ICUxJHMgaXMgYSBwcmVkZWZpbmVkIHBhZ2UgdGl0bGU7ICUyJGQgaXMgYSBwcmVkZWZpbmVkIHBhZ2UgSUQ7ICUzJHMgaXMgYSBwcmVkZWZpbmVkIHBhZ2UgcGVybWFsaW5rLgoJCQkkcGFnZXNbICRwYWdlX3RpdGxlIF0gPSBzcHJpbnRmKCBfXyggJyUxJHMgKElEIyUyJGQpIHwgJTMkcycsICd1bHRpbWF0ZS1tZW1iZXInICksIGdldF90aGVfdGl0bGUoICRwcmVkZWZpbmVkX3BhZ2VfaWQgKSwgJHByZWRlZmluZWRfcGFnZV9pZCwgZ2V0X3Blcm1hbGluayggJHByZWRlZmluZWRfcGFnZV9pZCApICk7CgkJfQoKCQkkcGFnZXMgPSBhcHBseV9maWx0ZXJzKCAndW1fZGVidWdfaW5mb3JtYXRpb25fcGFnZXMnLCAkcGFnZXMgKTsKCgkJJHBhZ2VzX3NldHRpbmdzID0gYXJyYXkoCgkJCSd1bS1wYWdlcycgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUGFnZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiAkcGFnZXMsCgkJCSksCgkJKTsKCgkJLy8gVXNlciBzZXR0aW5ncwoJCSRwZXJtYWxpbmtfYmFzZSA9IFVNKCktPmNvbmZpZygpLT5wZXJtYWxpbmtfYmFzZV9vcHRpb25zOwoJCSRkaXNwbGF5X25hbWUgICA9IFVNKCktPmNvbmZpZygpLT5kaXNwbGF5X25hbWVfb3B0aW9uczsKCgkJJHVzZXJfc2V0dGluZ3MgPSBhcnJheSgKCQkJJ3VtLXBlcm1hbGlua19iYXNlJyAgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUHJvZmlsZSBQZXJtYWxpbmsgQmFzZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IGlzc2V0KCAkcGVybWFsaW5rX2Jhc2VbIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncGVybWFsaW5rX2Jhc2UnICkgXSApID8gJHBlcm1hbGlua19iYXNlWyBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Blcm1hbGlua19iYXNlJyApIF0gOiAkbGFiZWxzWydubyddLAoJCQkpLAoJCQkndW0tZGlzcGxheV9uYW1lJyAgICAgICAgICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdVc2VyIERpc3BsYXkgTmFtZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IGlzc2V0KCAkZGlzcGxheV9uYW1lWyBVTSgpLT5vcHRpb25zKCktPmdldCggJ2Rpc3BsYXlfbmFtZScgKSBdICkgPyAkZGlzcGxheV9uYW1lWyBVTSgpLT5vcHRpb25zKCktPmdldCggJ2Rpc3BsYXlfbmFtZScgKSBdIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLWF1dGhvcl9yZWRpcmVjdCcgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnQXV0b21hdGljYWxseSByZWRpcmVjdCBhdXRob3IgcGFnZSB0byB0aGVpciBwcm9maWxlPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYXV0aG9yX3JlZGlyZWN0JyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpLAoJCQkndW0tbWVtYmVyc19wYWdlJyAgICAgICAgICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgTWVtYmVycyBEaXJlY3RvcnknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ21lbWJlcnNfcGFnZScgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLXRvZ2dsZV9wYXNzd29yZCcgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnU2hvdy9oaWRlIHBhc3N3b3JkIGJ1dHRvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAndG9nZ2xlX3Bhc3N3b3JkJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpLAoJCQkndW0tcmVxdWlyZV9zdHJvbmdwYXNzJyAgICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdSZXF1aXJlIFN0cm9uZyBQYXNzd29yZHMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3JlcXVpcmVfc3Ryb25ncGFzcycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLXBhc3N3b3JkX21pbl9jaGFycycgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUmVxdWlyZSBTdHJvbmcgUGFzc3dvcmRzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwYXNzd29yZF9taW5fY2hhcnMnICksCgkJCSksCgkJCSd1bS1wYXNzd29yZF9tYXhfY2hhcnMnICAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1JlcXVpcmUgU3Ryb25nIFBhc3N3b3JkcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncGFzc3dvcmRfbWF4X2NoYXJzJyApLAoJCQkpLAoJCQkndW0tcHJvZmlsZV9ub2luZGV4JyAgICAgICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdBdm9pZCBpbmRleGluZyBwcm9maWxlIGJ5IHNlYXJjaCBlbmdpbmVzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX25vaW5kZXgnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCSksCgkJCSd1bS1hY3RpdmF0aW9uX2xpbmtfZXhwaXJ5X3RpbWUnID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0FjdGl2YXRpb24gbGluayBsaWZldGltZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYWN0aXZhdGlvbl9saW5rX2V4cGlyeV90aW1lJyApLAoJCQkpLAoJCQkndW0tdXNlX2dyYXZhdGFycycgICAgICAgICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdVc2UgR3JhdmF0YXJzPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAndXNlX2dyYXZhdGFycycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLWRlbGV0ZV9jb21tZW50cycgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnRGVsZXRpbmcgdXNlciBjb21tZW50cyBhZnRlciBkZWxldGluZyBhIHVzZXInLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2RlbGV0ZV9jb21tZW50cycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkpOwoKCQlpZiAoICdjdXN0b21fbWV0YScgPT09IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncGVybWFsaW5rX2Jhc2UnICkgKSB7CgkJCSR1c2VyX3NldHRpbmdzID0gVU0oKS0+YXJyYXlfaW5zZXJ0X2JlZm9yZSgKCQkJCSR1c2VyX3NldHRpbmdzLAoJCQkJJ3VtLWRpc3BsYXlfbmFtZScsCgkJCQlhcnJheSgKCQkJCQkndW0tcGVybWFsaW5rX2Jhc2VfY3VzdG9tX21ldGEnID0+IGFycmF5KAoJCQkJCQknbGFiZWwnID0+IF9fKCAnUHJvZmlsZSBQZXJtYWxpbmsgQmFzZSBDdXN0b20gTWV0YSBLZXknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncGVybWFsaW5rX2Jhc2VfY3VzdG9tX21ldGEnICksCgkJCQkJKSwKCQkJCSkKCQkJKTsKCQl9CgoJCWlmICggJ2ZpZWxkJyA9PT0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdkaXNwbGF5X25hbWUnICkgKSB7CgkJCSR1c2VyX3NldHRpbmdzID0gVU0oKS0+YXJyYXlfaW5zZXJ0X2JlZm9yZSgKCQkJCSR1c2VyX3NldHRpbmdzLAoJCQkJJ3VtLWF1dGhvcl9yZWRpcmVjdCcsCgkJCQlhcnJheSgKCQkJCQkndW0tZGlzcGxheV9uYW1lX2ZpZWxkJyA9PiBhcnJheSgKCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0Rpc3BsYXkgTmFtZSBDdXN0b20gRmllbGQocyknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZGlzcGxheV9uYW1lX2ZpZWxkJyApLAoJCQkJCSksCgkJCQkpCgkJCSk7CgkJfQoKCQlpZiAoIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAndXNlX2dyYXZhdGFycycgKSApIHsKCQkJJGdyYXZhdGFyX29wdGlvbnMgPSBhcnJheSgKCQkJCSdkZWZhdWx0JyAgID0+IF9fKCAnRGVmYXVsdCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQknNDA0JyAgICAgICA9PiBfXyggJzQwNCAoIEZpbGUgTm90IEZvdW5kIHJlc3BvbnNlICknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ21tJyAgICAgICAgPT4gX18oICdNeXN0ZXJ5IE1hbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQknaWRlbnRpY29uJyA9PiBfXyggJ0lkZW50aWNvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQknbW9uc3RlcmlkJyA9PiBfXyggJ01vbnN0ZXJpZCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQknd2F2YXRhcicgICA9PiBfXyggJ1dhdmF0YXInLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3JldHJvJyAgICAgPT4gX18oICdSZXRybycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQknYmxhbmsnICAgICA9PiBfXyggJ0JsYW5rICggYSB0cmFuc3BhcmVudCBQTkcgaW1hZ2UgKScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSk7CgoJCQkkdXNlcl9zZXR0aW5nc1sndW0tdXNlX3VtX2dyYXZhdGFyX2RlZmF1bHRfYnVpbHRpbl9pbWFnZSddID0gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnVXNlIEdyYXZhdGFyIGJ1aWx0aW4gaW1hZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiAkZ3JhdmF0YXJfb3B0aW9uc1sgVU0oKS0+b3B0aW9ucygpLT5nZXQoICd1c2VfdW1fZ3JhdmF0YXJfZGVmYXVsdF9idWlsdGluX2ltYWdlJyApIF0sCgkJCSk7CgkJCWlmICggJ2RlZmF1bHQnID09PSBVTSgpLT5vcHRpb25zKCktPmdldCggJ3VzZV91bV9ncmF2YXRhcl9kZWZhdWx0X2J1aWx0aW5faW1hZ2UnICkgKSB7CgkJCQkkdXNlcl9zZXR0aW5nc1sndW0tdXNlX3VtX2dyYXZhdGFyX2RlZmF1bHRfaW1hZ2UnXSA9IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gX18oICdVc2UgRGVmYXVsdCBwbHVnaW4gYXZhdGFyIGFzIEdyYXZhdGFyXCdzIERlZmF1bHQgYXZhdGFyJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAndXNlX3VtX2dyYXZhdGFyX2RlZmF1bHRfaW1hZ2UnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkpOwoJCQl9CgkJfQoKCQkvLyBBY2NvdW50IHNldHRpbmdzCgkJJGFjY291bnRfc2V0dGluZ3MgPSBhcnJheSgKCQkJJ3VtLWFjY291bnRfdGFiX3Bhc3N3b3JkJyA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdQYXNzd29yZCBBY2NvdW50IFRhYicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYWNjb3VudF90YWJfcGFzc3dvcmQnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCSksCgkJCSd1bS1hY2NvdW50X3RhYl9wcml2YWN5JyAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUHJpdmFjeSBBY2NvdW50IFRhYicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYWNjb3VudF90YWJfcHJpdmFjeScgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkpOwoKCQlpZiAoIGZhbHNlICE9PSBVTSgpLT5hY2NvdW50KCktPmlzX25vdGlmaWNhdGlvbnNfdGFiX3Zpc2libGUoKSApIHsKCQkJJGFjY291bnRfc2V0dGluZ3NbJ3VtLWFjY291bnRfdGFiX25vdGlmaWNhdGlvbnMnXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ05vdGlmaWNhdGlvbnMgQWNjb3VudCBUYWInLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FjY291bnRfdGFiX25vdGlmaWNhdGlvbnMnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCSk7CgkJfQoKCQkkYWNjb3VudF9zZXR0aW5ncyA9IGFycmF5X21lcmdlKAoJCQkkYWNjb3VudF9zZXR0aW5ncywKCQkJYXJyYXkoCgkJCQkndW0tYWNjb3VudF90YWJfZGVsZXRlJyAgICAgICAgICAgICAgICAgICA9PiBhcnJheSgKCQkJCQknbGFiZWwnID0+IF9fKCAnRGVsZXRlIEFjY291bnQgVGFiJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYWNjb3VudF90YWJfZGVsZXRlJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJKSwKCQkJCSd1bS1kZWxldGVfYWNjb3VudF90ZXh0JyAgICAgICAgICAgICAgICAgID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gX18oICdBY2NvdW50IERlbGV0aW9uIEN1c3RvbSBUZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZGVsZXRlX2FjY291bnRfdGV4dCcgKSwKCQkJCSksCgkJCQkndW0tZGVsZXRlX2FjY291bnRfbm9fcGFzc19yZXF1aXJlZF90ZXh0JyA9PiBhcnJheSgKCQkJCQknbGFiZWwnID0+IF9fKCAnQWNjb3VudCBEZWxldGlvbiB3aXRob3V0IHBhc3N3b3JkIEN1c3RvbSBUZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZGVsZXRlX2FjY291bnRfbm9fcGFzc19yZXF1aXJlZF90ZXh0JyApLAoJCQkJKSwKCQkJCSd1bS1hY2NvdW50X25hbWUnICAgICAgICAgICAgICAgICAgICAgICAgID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gX18oICdBZGQgYSBGaXJzdCAmIExhc3QgTmFtZSBmaWVsZHMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdhY2NvdW50X25hbWUnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkpLAoJCQkpCgkJKTsKCgkJaWYgKCBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FjY291bnRfbmFtZScgKSApIHsKCQkJJGFjY291bnRfc2V0dGluZ3NbJ3VtLWFjY291bnRfbmFtZV9kaXNhYmxlJ10gPSBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdEaXNhYmxlIEZpcnN0ICYgTGFzdCBuYW1lIGZpZWxkIGVkaXRpbmcnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FjY291bnRfbmFtZV9kaXNhYmxlJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpOwoJCQkkYWNjb3VudF9zZXR0aW5nc1sndW0tYWNjb3VudF9uYW1lX3JlcXVpcmUnXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1JlcXVpcmUgRmlyc3QgJiBMYXN0IE5hbWUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FjY291bnRfbmFtZV9yZXF1aXJlJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpOwoJCX0KCgkJJGFjY291bnRfc2V0dGluZ3NbJ3VtLWFjY291bnRfZW1haWwnXSA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnQWxsb3cgdXNlcnMgdG8gY2hhbmdlIGUtbWFpbCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdhY2NvdW50X2VtYWlsJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCSk7CgoJCSRhY2NvdW50X3NldHRpbmdzWyd1bS1hY2NvdW50X2dlbmVyYWxfcGFzc3dvcmQnXSA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnUGFzc3dvcmQgaXMgcmVxdWlyZWQ/JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FjY291bnRfZ2VuZXJhbF9wYXNzd29yZCcgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoKCQkkYWNjb3VudF9zZXR0aW5nc1sndW0tYWNjb3VudF9oaWRlX2luX2RpcmVjdG9yeSddID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdBbGxvdyB1c2VycyB0byBoaWRlIHRoZWlyIHByb2ZpbGVzIGZyb20gZGlyZWN0b3J5JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FjY291bnRfaGlkZV9pbl9kaXJlY3RvcnknICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJKTsKCgkJaWYgKCBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FjY291bnRfaGlkZV9pbl9kaXJlY3RvcnknICkgKSB7CgkJCSRhY2NvdW50X3NldHRpbmdzWyd1bS1hY2NvdW50X2hpZGVfaW5fZGlyZWN0b3J5X2RlZmF1bHQnXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0hpZGUgcHJvZmlsZXMgZnJvbSBkaXJlY3RvcnkgYnkgZGVmYXVsdCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYWNjb3VudF9oaWRlX2luX2RpcmVjdG9yeV9kZWZhdWx0JyApLAoJCQkpOwoJCX0KCgkJLy8gVXBsb2FkcyBzZXR0aW5ncwoJCSRwcm9maWxlX3NpemVzX2xpc3QgPSAnJzsKCQkkcHJvZmlsZV9zaXplcyAgICAgID0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwaG90b190aHVtYl9zaXplcycgKTsKCQlpZiAoICEgZW1wdHkoICRwcm9maWxlX3NpemVzICkgKSB7CgkJCWZvcmVhY2ggKCAkcHJvZmlsZV9zaXplcyBhcyAkc2l6ZSApIHsKCQkJCSRwcm9maWxlX3NpemVzX2xpc3QgPSBlbXB0eSggJHByb2ZpbGVfc2l6ZXNfbGlzdCApID8gJHNpemUgOiAkcHJvZmlsZV9zaXplc19saXN0IC4gJywgJyAuICRzaXplOwoJCQl9CgkJfQoJCSRjb3Zlcl9zaXplc19saXN0ID0gJyc7CgkJJGNvdmVyX3NpemVzICAgICAgPSBVTSgpLT5vcHRpb25zKCktPmdldCggJ2NvdmVyX3RodW1iX3NpemVzJyApOwoJCWlmICggISBlbXB0eSggJGNvdmVyX3NpemVzICkgKSB7CgkJCWZvcmVhY2ggKCAkY292ZXJfc2l6ZXMgYXMgJHNpemUgKSB7CgkJCQkkY292ZXJfc2l6ZXNfbGlzdCA9IGVtcHR5KCAkY292ZXJfc2l6ZXNfbGlzdCApID8gJHNpemUgOiAkY292ZXJfc2l6ZXNfbGlzdCAuICcsICcgLiAkc2l6ZTsKCQkJfQoJCX0KCQkkdXBsb2Fkc19zZXR0aW5ncyA9IGFycmF5KAoJCQkndW0tcHJvZmlsZV9waG90b19tYXhfc2l6ZScgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUHJvZmlsZSBQaG90byBNYXhpbXVtIEZpbGUgU2l6ZSAoYnl0ZXMpJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX3Bob3RvX21heF9zaXplJyApLAoJCQkpLAoJCQkndW0tY292ZXJfcGhvdG9fbWF4X3NpemUnICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnQ292ZXIgUGhvdG8gTWF4aW11bSBGaWxlIFNpemUgKGJ5dGVzKScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnY292ZXJfcGhvdG9fbWF4X3NpemUnICksCgkJCSksCgkJCSd1bS1waG90b190aHVtYl9zaXplcycgICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdQcm9maWxlIFBob3RvIFRodW1ibmFpbCBTaXplcyAocHgpJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gJHByb2ZpbGVfc2l6ZXNfbGlzdCwKCQkJKSwKCQkJJ3VtLWNvdmVyX3RodW1iX3NpemVzJyAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0NvdmVyIFBob3RvIFRodW1ibmFpbCBTaXplcyAocHgpJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gJGNvdmVyX3NpemVzX2xpc3QsCgkJCSksCgkJCSd1bS1pbWFnZV9vcmllbnRhdGlvbl9ieV9leGlmJyA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdDaGFuZ2UgaW1hZ2Ugb3JpZW50YXRpb24nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2ltYWdlX29yaWVudGF0aW9uX2J5X2V4aWYnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCSksCgkJCSd1bS1pbWFnZV9jb21wcmVzc2lvbicgICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdJbWFnZSBRdWFsaXR5JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdpbWFnZV9jb21wcmVzc2lvbicgKSwKCQkJKSwKCQkJJ3VtLWltYWdlX21heF93aWR0aCcgICAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0ltYWdlIFVwbG9hZCBNYXhpbXVtIFdpZHRoIChweCknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2ltYWdlX21heF93aWR0aCcgKSwKCQkJKSwKCQkJJ3VtLWNvdmVyX21pbl93aWR0aCcgICAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0NvdmVyIFBob3RvIE1pbmltdW0gV2lkdGggKHB4KScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnY292ZXJfbWluX3dpZHRoJyApLAoJCQkpLAoJCSk7CgoJCS8vIENvbnRlbnQgUmVzdHJpY3Rpb24gc2V0dGluZ3MKCQkkcmVzdHJpY3RlZF9wb3N0cyAgICAgID0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdyZXN0cmljdGVkX2FjY2Vzc19wb3N0X21ldGFib3gnICk7CgkJJHJlc3RyaWN0ZWRfcG9zdHNfbGlzdCA9ICcnOwoJCWlmICggISBlbXB0eSggJHJlc3RyaWN0ZWRfcG9zdHMgKSApIHsKCQkJZm9yZWFjaCAoICRyZXN0cmljdGVkX3Bvc3RzIGFzICRrZXkgPT4gJHBvc3RzICkgewoJCQkJJHJlc3RyaWN0ZWRfcG9zdHNfbGlzdCA9IGVtcHR5KCAkcmVzdHJpY3RlZF9wb3N0c19saXN0ICkgPyAka2V5IDogJHJlc3RyaWN0ZWRfcG9zdHNfbGlzdCAuICcsICcgLiAka2V5OwoJCQl9CgkJfQoJCSRyZXN0cmljdGVkX3RheG9ub215ICAgICAgPSBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Jlc3RyaWN0ZWRfYWNjZXNzX3RheG9ub215X21ldGFib3gnICk7CgkJJHJlc3RyaWN0ZWRfdGF4b25vbXlfbGlzdCA9ICcnOwoJCWlmICggISBlbXB0eSggJHJlc3RyaWN0ZWRfdGF4b25vbXkgKSApIHsKCQkJZm9yZWFjaCAoICRyZXN0cmljdGVkX3RheG9ub215IGFzICRrZXkgPT4gJHBvc3RzICkgewoJCQkJJHJlc3RyaWN0ZWRfdGF4b25vbXlfbGlzdCA9IGVtcHR5KCAkcmVzdHJpY3RlZF90YXhvbm9teV9saXN0ICkgPyAka2V5IDogJHJlc3RyaWN0ZWRfdGF4b25vbXlfbGlzdCAuICcsICcgLiAka2V5OwoJCQl9CgkJfQoKCQkkYWNjZXNzaWJsZSA9IGFic2ludCggVU0oKS0+b3B0aW9ucygpLT5nZXQoICdhY2Nlc3NpYmxlJyApICk7CgoJCSRyZXN0cmljdF9zZXR0aW5ncyA9IGFycmF5KAoJCQkndW0tYWNjZXNzaWJsZScgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnR2xvYmFsIFNpdGUgQWNjZXNzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gMCA9PT0gJGFjY2Vzc2libGUgPyBfXyggJ1NpdGUgYWNjZXNzaWJsZSB0byBFdmVyeW9uZScsICd1bHRpbWF0ZS1tZW1iZXInICkgOiBfXyggJ1NpdGUgYWNjZXNzaWJsZSB0byBMb2dnZWQgSW4gVXNlcnMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkpLAoJCSk7CgoJCWlmICggMiA9PT0gJGFjY2Vzc2libGUgKSB7CgkJCSRleGNsdWRlX3VyaXMgICAgICA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYWNjZXNzX2V4Y2x1ZGVfdXJpcycgKTsKCQkJJGV4Y2x1ZGVfdXJpc19saXN0ID0gJyc7CgkJCWlmICggISBlbXB0eSggJGV4Y2x1ZGVfdXJpcyApICkgewoJCQkJJGV4Y2x1ZGVfdXJpc19saXN0ID0gaW1wbG9kZSggJywgJywgJGV4Y2x1ZGVfdXJpcyApOwoJCQl9CgkJCSRyZXN0cmljdF9zZXR0aW5nc1sndW0tYWNjZXNzX3JlZGlyZWN0J10gICAgICAgICAgPSBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdDdXN0b20gUmVkaXJlY3QgVVJMJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdhY2Nlc3NfcmVkaXJlY3QnICksCgkJCSk7CgkJCSRyZXN0cmljdF9zZXR0aW5nc1sndW0tYWNjZXNzX2V4Y2x1ZGVfdXJpcyddICAgICAgPSBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdFeGNsdWRlIHRoZSBmb2xsb3dpbmcgVVJMcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+ICRleGNsdWRlX3VyaXNfbGlzdCwKCQkJKTsKCQkJJHJlc3RyaWN0X3NldHRpbmdzWyd1bS1ob21lX3BhZ2VfYWNjZXNzaWJsZSddICAgICA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0FsbG93IEhvbWVwYWdlIHRvIGJlIGFjY2Vzc2libGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2hvbWVfcGFnZV9hY2Nlc3NpYmxlJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpOwoJCQkkcmVzdHJpY3Rfc2V0dGluZ3NbJ3VtLWNhdGVnb3J5X3BhZ2VfYWNjZXNzaWJsZSddID0gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnQWxsb3cgQ2F0ZWdvcnkgcGFnZXMgdG8gYmUgYWNjZXNzaWJsZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnY2F0ZWdvcnlfcGFnZV9hY2Nlc3NpYmxlJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpOwoJCX0KCgkJJHJlc3RyaWN0X3NldHRpbmdzWyd1bS1yZXN0cmljdGVkX3Bvc3RfdGl0bGVfcmVwbGFjZSddID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdSZXN0cmljdGVkIENvbnRlbnQgVGl0bGVzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Jlc3RyaWN0ZWRfcG9zdF90aXRsZV9yZXBsYWNlJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCSk7CgkJaWYgKCBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Jlc3RyaWN0ZWRfcG9zdF90aXRsZV9yZXBsYWNlJyApICkgewoJCQkkcmVzdHJpY3Rfc2V0dGluZ3NbJ3VtLXJlc3RyaWN0ZWRfYWNjZXNzX3Bvc3RfdGl0bGUnXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1Jlc3RyaWN0ZWQgQ29udGVudCBUaXRsZSBUZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gc3RyaXBzbGFzaGVzKCBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Jlc3RyaWN0ZWRfYWNjZXNzX3Bvc3RfdGl0bGUnICkgKSwKCQkJKTsKCQl9CgoJCSRyZXN0cmljdF9zZXR0aW5nc1sndW0tcmVzdHJpY3RlZF9hY2Nlc3NfbWVzc2FnZSddID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdSZXN0cmljdGVkIEFjY2VzcyBNZXNzYWdlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBzdHJpcHNsYXNoZXMoIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVzdHJpY3RlZF9hY2Nlc3NfbWVzc2FnZScgKSApLAoJCSk7CgkJJHJlc3RyaWN0X3NldHRpbmdzWyd1bS1yZXN0cmljdGVkX2Jsb2NrcyddICAgICAgICAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ0VuYWJsZSB0aGUgIkNvbnRlbnQgUmVzdHJpY3Rpb24iIHNldHRpbmdzIGZvciB0aGUgR3V0ZW5iZXJnIEJsb2NrcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdyZXN0cmljdGVkX2Jsb2NrcycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoJCWlmICggVU0oKS0+b3B0aW9ucygpLT5nZXQoICdyZXN0cmljdGVkX2Jsb2NrcycgKSApIHsKCQkJJHJlc3RyaWN0X3NldHRpbmdzWyd1bS1yZXN0cmljdGVkX2Jsb2NrX21lc3NhZ2UnXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1Jlc3RyaWN0ZWQgQWNjZXNzIEJsb2NrIE1lc3NhZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBzdHJpcHNsYXNoZXMoIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVzdHJpY3RlZF9ibG9ja19tZXNzYWdlJyApICksCgkJCSk7CgkJfQoJCSRyZXN0cmljdF9zZXR0aW5nc1sndW0tcmVzdHJpY3RlZF9hY2Nlc3NfcG9zdF9tZXRhYm94J10gICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgdGhlICJDb250ZW50IFJlc3RyaWN0aW9uIiBzZXR0aW5ncyBmb3IgcG9zdCB0eXBlcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gJHJlc3RyaWN0ZWRfcG9zdHNfbGlzdCwKCQkpOwoJCSRyZXN0cmljdF9zZXR0aW5nc1sndW0tcmVzdHJpY3RlZF9hY2Nlc3NfdGF4b25vbXlfbWV0YWJveCddID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgdGhlICJDb250ZW50IFJlc3RyaWN0aW9uIiBzZXR0aW5ncyBmb3IgdGF4b25vbWllcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gJHJlc3RyaWN0ZWRfdGF4b25vbXlfbGlzdCwKCQkpOwoKCQkvLyBBY2Nlc3Mgb3RoZXIgc2V0dGluZ3MKCQkkYmxvY2tlZF9lbWFpbHMgICAgPSBzdHJfcmVwbGFjZSggJzxiciAvPicsICcsICcsIG5sMmJyKCBVTSgpLT5vcHRpb25zKCktPmdldCggJ2Jsb2NrZWRfZW1haWxzJyApICkgKTsKCQkkYmxvY2tlZF93b3JkcyAgICAgPSBzdHJfcmVwbGFjZSggJzxiciAvPicsICcsICcsIG5sMmJyKCBVTSgpLT5vcHRpb25zKCktPmdldCggJ2Jsb2NrZWRfd29yZHMnICkgKSApOwoJCSRhbGxvd2VkX2NhbGxiYWNrcyA9IHN0cl9yZXBsYWNlKCAnPGJyIC8+JywgJywgJywgbmwyYnIoIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnYWxsb3dlZF9jaG9pY2VfY2FsbGJhY2tzJyApICkgKTsKCgkJJGFjY2Vzc19vdGhlcl9zZXR0aW5ncyA9IGFycmF5KAoJCQkndW0tZW5hYmxlX3Jlc2V0X3Bhc3N3b3JkX2xpbWl0JyA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgdGhlIFJlc2V0IFBhc3N3b3JkIExpbWl0PycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZW5hYmxlX3Jlc2V0X3Bhc3N3b3JkX2xpbWl0JyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpLAoJCSk7CgkJaWYgKCAxID09PSBhYnNpbnQoIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZW5hYmxlX3Jlc2V0X3Bhc3N3b3JkX2xpbWl0JyApICkgKSB7CgkJCSRhY2Nlc3Nfb3RoZXJfc2V0dGluZ3NbJ3VtLXJlc2V0X3Bhc3N3b3JkX2xpbWl0X251bWJlciddID0gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUmVzZXQgUGFzc3dvcmQgTGltaXQgJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdyZXNldF9wYXNzd29yZF9saW1pdF9udW1iZXInICksCgkJCSk7CgkJfQoJCSRhY2Nlc3Nfb3RoZXJfc2V0dGluZ3NbJ3VtLWNoYW5nZV9wYXNzd29yZF9yZXF1ZXN0X2xpbWl0J10gPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ0NoYW5nZSBQYXNzd29yZCByZXF1ZXN0IGxpbWl0ICcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdjaGFuZ2VfcGFzc3dvcmRfcmVxdWVzdF9saW1pdCcgKSwKCQkpOwoJCSRhY2Nlc3Nfb3RoZXJfc2V0dGluZ3NbJ3VtLWJsb2NrZWRfZW1haWxzJ10gICAgICAgICAgICAgICAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ0Jsb2NrZWQgRW1haWwgQWRkcmVzc2VzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBzdHJpcHNsYXNoZXMoICRibG9ja2VkX2VtYWlscyApLAoJCSk7CgkJJGFjY2Vzc19vdGhlcl9zZXR0aW5nc1sndW0tYmxvY2tlZF93b3JkcyddICAgICAgICAgICAgICAgICA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnQmxhY2tsaXN0IFdvcmRzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBzdHJpcHNsYXNoZXMoICRibG9ja2VkX3dvcmRzICksCgkJKTsKCQkkYWNjZXNzX290aGVyX3NldHRpbmdzWyd1bS1hbGxvd2VkX2Nob2ljZV9jYWxsYmFja3MnXSAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdBbGxvd2VkIENob2ljZSBDYWxsYmFja3MnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmFsdWUnID0+IHN0cmlwc2xhc2hlcyggJGFsbG93ZWRfY2FsbGJhY2tzICksCgkJKTsKCQkkYWNjZXNzX290aGVyX3NldHRpbmdzWyd1bS1hbGxvd191cmxfcmVkaXJlY3RfY29uZmlybSddICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdBbGxvdyBleHRlcm5hbCBsaW5rIHJlZGlyZWN0IGNvbmZpcm0gJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FsbG93X3VybF9yZWRpcmVjdF9jb25maXJtJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCSk7CgoJCS8vIEVtYWlsIHNldHRpbmdzCgkJJGVtYWlsX3NldHRpbmdzID0gYXJyYXkoCgkJCSd1bS1hZG1pbl9lbWFpbCcgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnQWRtaW4gRS1tYWlsIEFkZHJlc3MnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2FkbWluX2VtYWlsJyApLAoJCQkpLAoJCQkndW0tbWFpbF9mcm9tJyAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ01haWwgYXBwZWFycyBmcm9tJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdtYWlsX2Zyb20nICksCgkJCSksCgkJCSd1bS1tYWlsX2Zyb21fYWRkcicgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnTWFpbCBhcHBlYXJzIGZyb20gYWRkcmVzcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnbWFpbF9mcm9tX2FkZHInICksCgkJCSksCgkJCSd1bS1lbWFpbF9odG1sJyAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnVXNlIEhUTUwgZm9yIEUtbWFpbHM/JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdlbWFpbF9odG1sJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpLAoJCSk7CgoJCSRlbWFpbHMgPSBVTSgpLT5jb25maWcoKS0+ZW1haWxfbm90aWZpY2F0aW9uczsKCQlmb3JlYWNoICggJGVtYWlscyBhcyAka2V5ID0+ICRlbWFpbCApIHsKCQkJaWYgKCBVTSgpLT5vcHRpb25zKCktPmdldCggJGtleSAuICdfb24nICkgKSB7CgkJCQkkZW1haWxfc2V0dGluZ3NbICd1bS0nIC4gJGtleSBdID0gYXJyYXkoCgkJCQkJLy8gdHJhbnNsYXRvcnM6ICVzIGlzIGVtYWlsIHRlbXBsYXRlIHRpdGxlLgoJCQkJCSdsYWJlbCcgPT4gc3ByaW50ZiggX18oICciJXMiIFN1YmplY3QnLCAndWx0aW1hdGUtbWVtYmVyJyApLCAkZW1haWxbJ3RpdGxlJ10gKSwKCQkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAka2V5IC4gJ19zdWInICksCgkJCQkpOwoKCQkJCSRlbWFpbF9zZXR0aW5nc1sgJ3VtLXRoZW1lXycgLiAka2V5IF0gPSBhcnJheSgKCQkJCQkvLyB0cmFuc2xhdG9yczogJXMgaXMgZW1haWwgdGVtcGxhdGUgdGl0bGUuCgkJCQkJJ2xhYmVsJyA9PiBzcHJpbnRmKCBfXyggJ1RlbXBsYXRlICIlcyIgaW4gdGhlbWU/JywgJ3VsdGltYXRlLW1lbWJlcicgKSwgJGVtYWlsWyd0aXRsZSddICksCgkJCQkJJ3ZhbHVlJyA9PiAnJyAhPT0gbG9jYXRlX3RlbXBsYXRlKCBhcnJheSggJ3VsdGltYXRlLW1lbWJlci9lbWFpbHMvJyAuICRrZXkgLiAnLnBocCcgKSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJKTsKCQkJfQoJCX0KCgkJLy8gQXBwZWFyYW5jZSBzZXR0aW5ncy4KCQkvLyA+IFByb2ZpbGUgc2VjdGlvbi4KCQkkaWNvbnNfZGlzcGxheV9vcHRpb25zICAgICAgID0gYXJyYXkoCgkJCSdmaWVsZCcgPT4gX18oICdTaG93IGluc2lkZSB0ZXh0IGZpZWxkJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2xhYmVsJyA9PiBfXyggJ1Nob3cgd2l0aCBsYWJlbCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdvZmYnICAgPT4gX18oICdUdXJuIG9mZicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJKTsKCQkkcHJvZmlsZV9oZWFkZXJfbWVudV9vcHRpb25zID0gYXJyYXkoCgkJCSdiYycgPT4gX18oICdCb3R0b20gb2YgSWNvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdsYycgPT4gX18oICdMZWZ0IG9mIEljb24gKHJpZ2h0IGZvciBSVEwpJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkpOwoKCQkkcHJvZmlsZV90ZW1wbGF0ZXMgICAgICA9IFVNKCktPnNob3J0Y29kZXMoKS0+Z2V0X3RlbXBsYXRlcyggJ3Byb2ZpbGUnICk7CgkJJHByb2ZpbGVfdGVtcGxhdGVfa2V5ICAgPSBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfdGVtcGxhdGUnICk7CgkJJHByb2ZpbGVfdGVtcGxhdGVfdGl0bGUgPSBhcnJheV9rZXlfZXhpc3RzKCAkcHJvZmlsZV90ZW1wbGF0ZV9rZXksICRwcm9maWxlX3RlbXBsYXRlcyApID8gJHByb2ZpbGVfdGVtcGxhdGVzWyAkcHJvZmlsZV90ZW1wbGF0ZV9rZXkgXSA6IF9fKCAnTm8gdGVtcGxhdGUgbmFtZScsICd1bHRpbWF0ZS1tZW1iZXInICk7CgkJJHByb2ZpbGVfc2Vjb25kYXJ5X2J0biAgPSBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfc2Vjb25kYXJ5X2J0bicgKTsKCQkkcHJvZmlsZV9jb3Zlcl9lbmFibGVkICA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9jb3Zlcl9lbmFibGVkJyApOwoJCSRwcm9maWxlX2VtcHR5X3RleHQgICAgID0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX2VtcHR5X3RleHQnICk7CgoJCSRhcHBlYXJhbmNlX3NldHRpbmdzID0gYXJyYXkoCgkJCSd1bS1wcm9maWxlX3RlbXBsYXRlJyAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1Byb2ZpbGUgRGVmYXVsdCBUZW1wbGF0ZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkvLyB0cmFuc2xhdG9yczogJTEkcyAtIHByb2ZpbGUgdGVtcGxhdGUgbmFtZSwgJTIkcyAtIHByb2ZpbGUgdGVtcGxhdGUgZmlsZW5hbWUKCQkJCSd2YWx1ZScgPT4gc3ByaW50ZiggX18oICclMSRzIChmaWxlbmFtZTogJTIkcy5waHApJywgJ3VsdGltYXRlLW1lbWJlcicgKSwgJHByb2ZpbGVfdGVtcGxhdGVfdGl0bGUsICRwcm9maWxlX3RlbXBsYXRlX2tleSApLAoJCQkpLAoJCQkndW0tcHJvZmlsZV9tYXhfd2lkdGgnICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdQcm9maWxlIE1heGltdW0gV2lkdGgnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfbWF4X3dpZHRoJyApLAoJCQkpLAoJCQkndW0tcHJvZmlsZV9hcmVhX21heF93aWR0aCcgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdQcm9maWxlIEFyZWEgTWF4aW11bSBXaWR0aCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9hcmVhX21heF93aWR0aCcgKSwKCQkJKSwKCQkJJ3VtLXByb2ZpbGVfaWNvbnMnICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUHJvZmlsZSBGaWVsZCBJY29ucycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+ICRpY29uc19kaXNwbGF5X29wdGlvbnNbIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9pY29ucycgKSBdLAoJCQkpLAoJCQkndW0tcHJvZmlsZV9wcmltYXJ5X2J0bl93b3JkJyA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdQcm9maWxlIFByaW1hcnkgQnV0dG9uIFRleHQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfcHJpbWFyeV9idG5fd29yZCcgKSwKCQkJKSwKCQkJJ3VtLXByb2ZpbGVfc2Vjb25kYXJ5X2J0bicgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUHJvZmlsZSBTZWNvbmRhcnkgQnV0dG9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gJHByb2ZpbGVfc2Vjb25kYXJ5X2J0biA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkpOwoJCWlmICggISBlbXB0eSggJHByb2ZpbGVfc2Vjb25kYXJ5X2J0biApICkgewoJCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcHJvZmlsZV9zZWNvbmRhcnlfYnRuX3dvcmQnXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1Byb2ZpbGUgU2Vjb25kYXJ5IEJ1dHRvbiBUZXh0ICcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9zZWNvbmRhcnlfYnRuX3dvcmQnICksCgkJCSk7CgkJfQoKCQkkZGVmYXVsdF9hdmF0YXIgPSBVTSgpLT5vcHRpb25zKCktPmdldCggJ2RlZmF1bHRfYXZhdGFyJyApOwoJCSRkZWZhdWx0X2NvdmVyICA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZGVmYXVsdF9jb3ZlcicgKTsKCgkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLWRlZmF1bHRfYXZhdGFyJ10gICAgICAgICAgICAgICA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnRGVmYXVsdCBQcm9maWxlIFBob3RvJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiAhIGVtcHR5KCAkZGVmYXVsdF9hdmF0YXJbJ3VybCddICkgPyAkZGVmYXVsdF9hdmF0YXJbJ3VybCddIDogJycsCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tZGVmYXVsdF9jb3ZlciddICAgICAgICAgICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdEZWZhdWx0IENvdmVyIFBob3RvJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiAhIGVtcHR5KCAkZGVmYXVsdF9jb3ZlclsndXJsJ10gKSA/ICRkZWZhdWx0X2NvdmVyWyd1cmwnXSA6ICcnLAoJCSk7CgkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLWRpc2FibGVfcHJvZmlsZV9waG90b191cGxvYWQnXSA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnRGlzYWJsZSBQcm9maWxlIFBob3RvIFVwbG9hZCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdkaXNhYmxlX3Byb2ZpbGVfcGhvdG9fdXBsb2FkJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCSk7CgkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLXByb2ZpbGVfcGhvdG9zaXplJ10gICAgICAgICAgICA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnUHJvZmlsZSBQaG90byBTaXplJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfcGhvdG9zaXplJyApIC4gJ3gnIC4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX3Bob3Rvc2l6ZScgKSAuICdweCcsCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcHJvZmlsZV9jb3Zlcl9lbmFibGVkJ10gICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdQcm9maWxlIENvdmVyIFBob3RvcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gJHByb2ZpbGVfY292ZXJfZW5hYmxlZCA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoJCWlmICggISBlbXB0eSggJHByb2ZpbGVfY292ZXJfZW5hYmxlZCApICkgewoJCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcHJvZmlsZV9jb3ZlcnNpemUnXSAgID0gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUHJvZmlsZSBDb3ZlciBTaXplJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX2NvdmVyc2l6ZScgKSAuICdweCcsCgkJCSk7CgkJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1wcm9maWxlX2NvdmVyX3JhdGlvJ10gPSBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdQcm9maWxlIENvdmVyIFJhdGlvJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX2NvdmVyX3JhdGlvJyApLAoJCQkpOwoJCX0KCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcHJvZmlsZV9zaG93X21ldGFpY29uJ10gICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdQcm9maWxlIEhlYWRlciBNZXRhIFRleHQgSWNvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX3Nob3dfbWV0YWljb24nICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcHJvZmlsZV9zaG93X25hbWUnXSAgICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdTaG93IGRpc3BsYXkgbmFtZSBpbiBwcm9maWxlIGhlYWRlcicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX3Nob3dfbmFtZScgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1wcm9maWxlX3Nob3dfc29jaWFsX2xpbmtzJ10gPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ1Nob3cgc29jaWFsIGxpbmtzIGluIHByb2ZpbGUgaGVhZGVyJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfc2hvd19zb2NpYWxfbGlua3MnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcHJvZmlsZV9zaG93X2JpbyddICAgICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdTaG93IHVzZXIgZGVzY3JpcHRpb24gaW4gaGVhZGVyJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfc2hvd19iaW8nICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcHJvZmlsZV9zaG93X2h0bWxfYmlvJ10gICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgSFRNTCBzdXBwb3J0IGZvciB1c2VyIGRlc2NyaXB0aW9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfc2hvd19odG1sX2JpbycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1wcm9maWxlX2Jpb19tYXhjaGFycyddICAgICAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ1VzZXIgZGVzY3JpcHRpb24gbWF4aW11bSBjaGFycycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX2Jpb19tYXhjaGFycycgKSwKCQkpOwoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1wcm9maWxlX2hlYWRlcl9tZW51J10gICAgICAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ1Byb2ZpbGUgSGVhZGVyIE1lbnUgUG9zaXRpb24nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmFsdWUnID0+ICRwcm9maWxlX2hlYWRlcl9tZW51X29wdGlvbnNbIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9oZWFkZXJfbWVudScgKSBdLAoJCSk7CgkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLXByb2ZpbGVfZW1wdHlfdGV4dCddICAgICAgICA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnU2hvdyBhIGN1c3RvbSBtZXNzYWdlIGlmIHByb2ZpbGUgaXMgZW1wdHknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmFsdWUnID0+ICRwcm9maWxlX2VtcHR5X3RleHQgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJKTsKCQlpZiAoICEgZW1wdHkoICRwcm9maWxlX2VtcHR5X3RleHQgKSApIHsKCQkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLXByb2ZpbGVfZW1wdHlfdGV4dF9lbW8nXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1Nob3cgdGhlIGVtb3RpY29uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX2VtcHR5X3RleHRfZW1vJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpOwoJCX0KCgkJLy8gPiBQcm9maWxlIE1lbnUgc2VjdGlvbi4KCQkkcHJvZmlsZV9tZW51ID0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX21lbnUnICk7CgoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1wcm9maWxlX21lbnUnXSA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnRW5hYmxlIHByb2ZpbGUgbWVudScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gJHByb2ZpbGVfbWVudSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoKCQlpZiAoICEgZW1wdHkoICRwcm9maWxlX21lbnUgKSApIHsKCQkJLyoqCgkJCSAqIEZpbHRlcnMgYSBwcml2YWN5IGxpc3QgZXh0ZW5kLgoJCQkgKgoJCQkgKiBAc2luY2UgMi42LjEzCgkJCSAqIEBob29rIHVtX3Byb2ZpbGVfdGFic19wcml2YWN5X2xpc3QKCQkJICoKCQkJICogQHBhcmFtIHthcnJheX0gJHByaXZhY3lfb3B0aW9uIEFkZCBvcHRpb25zIGZvciBwcm9maWxlIHRhYnMnIHByaXZhY3kuCgkJCSAqCgkJCSAqIEByZXR1cm4ge2FycmF5fSBPcHRpb25zIGZvciBwcm9maWxlIHRhYnMnIHByaXZhY3kuCgkJCSAqCgkJCSAqIEBleGFtcGxlIDxjYXB0aW9uPkFkZCBvcHRpb25zIGZvciBwcm9maWxlIHRhYnMnIHByaXZhY3kuPC9jYXB0aW9uPgoJCQkgKiBmdW5jdGlvbiB1bV9wcm9maWxlX21lbnVfbGlua19hdHRycyggJHByaXZhY3lfb3B0aW9uICkgewoJCQkgKiAgICAgLy8geW91ciBjb2RlIGhlcmUKCQkJICogICAgIHJldHVybiAkcHJpdmFjeV9vcHRpb247CgkJCSAqIH0KCQkJICogYWRkX2ZpbHRlciggJ3VtX3Byb2ZpbGVfdGFic19wcml2YWN5X2xpc3QnLCAndW1fcHJvZmlsZV90YWJzX3ByaXZhY3lfbGlzdCcsIDEwLCAxICk7CgkJCSAqLwoJCQkkcHJpdmFjeV9vcHRpb24gPSBVTSgpLT5wcm9maWxlKCktPnRhYnNfcHJpdmFjeSgpOwoKCQkJJHRhYnMgPSBVTSgpLT5wcm9maWxlKCktPnRhYnMoKTsKCQkJZm9yZWFjaCAoICR0YWJzIGFzICRpZCA9PiAkdGFiICkgewoJCQkJaWYgKCAhIGVtcHR5KCAkdGFiWydoaWRkZW4nXSApICkgewoJCQkJCWNvbnRpbnVlOwoJCQkJfQoKCQkJCSR0YWJfZW5hYmxlZCA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV90YWJfJyAuICRpZCApOwoKCQkJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyAndW0tcHJvZmlsZV90YWJfJyAuICRpZCBdID0gYXJyYXkoCgkJCQkJLy8gdHJhbnNsYXRvcnM6ICVzIFByb2ZpbGUgVGFiIFRpdGxlCgkJCQkJJ2xhYmVsJyA9PiBzcHJpbnRmKCBfXyggJyVzIFRhYicsICd1bHRpbWF0ZS1tZW1iZXInICksICR0YWJbJ25hbWUnXSApLAoJCQkJCSd2YWx1ZScgPT4gJHRhYl9lbmFibGVkID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJKTsKCgkJCQlpZiAoICEgaXNzZXQoICR0YWJbJ2RlZmF1bHRfcHJpdmFjeSddICkgKSB7CgkJCQkJaWYgKCAhIGVtcHR5KCAkdGFiX2VuYWJsZWQgKSApIHsKCQkJCQkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbICd1bS1wcm9maWxlX3RhYl8nIC4gJGlkIC4gJ19wcml2YWN5JyBdID0gYXJyYXkoCgkJCQkJCQkvLyB0cmFuc2xhdG9yczogJXMgUHJvZmlsZSBUYWIgVGl0bGUKCQkJCQkJCSdsYWJlbCcgPT4gc3ByaW50ZiggX18oICdXaG8gY2FuIHNlZSAlcyBUYWI/JywgJ3VsdGltYXRlLW1lbWJlcicgKSwgJHRhYlsnbmFtZSddICksCgkJCQkJCQkndmFsdWUnID0+ICRwcml2YWN5X29wdGlvblsgVU0oKS0+b3B0aW9ucygpLT5nZXQoICdwcm9maWxlX3RhYl8nIC4gJGlkIC4gJ19wcml2YWN5JyApIF0sCgkJCQkJCSk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJCS8qKgoJCQkgKiBGaWx0ZXJzIGFwcGVhcmFuY2Ugc2V0dGluZ3MgZm9yIFNpdGUgSGVhbHRoIGV4dGVuZC4KCQkJICoKCQkJICogQHNpbmNlIDIuNi4xMwoJCQkgKiBAaG9vayB1bV9wcm9maWxlX3RhYnNfc2l0ZV9oZWFsdGgKCQkJICoKCQkJICogQHBhcmFtIHthcnJheX0gJGFwcGVhcmFuY2Vfc2V0dGluZ3MgQXBwZWFyYW5jZSBzZXR0aW5ncyBmb3IgU2l0ZSBIZWFsdGguCgkJCSAqCgkJCSAqIEByZXR1cm4ge2FycmF5fSBBcHBlYXJhbmNlIHNldHRpbmdzIGZvciBTaXRlIEhlYWx0aC4KCQkJICoKCQkJICogQGV4YW1wbGUgPGNhcHRpb24+QWRkIG9wdGlvbnMgZm9yIGFwcGVhcmFuY2Ugc2V0dGluZ3MgZm9yIFNpdGUgSGVhbHRoLjwvY2FwdGlvbj4KCQkJICogZnVuY3Rpb24gdW1fcHJvZmlsZV90YWJzX3NpdGVfaGVhbHRoKCAkYXBwZWFyYW5jZV9zZXR0aW5ncyApIHsKCQkJICogICAgIC8vIHlvdXIgY29kZSBoZXJlCgkJCSAqICAgICByZXR1cm4gJGFwcGVhcmFuY2Vfc2V0dGluZ3M7CgkJCSAqIH0KCQkJICogYWRkX2ZpbHRlciggJ3VtX3Byb2ZpbGVfdGFic19zaXRlX2hlYWx0aCcsICd1bV9wcm9maWxlX3RhYnNfc2l0ZV9oZWFsdGgnLCAxMCwgMSApOwoJCQkgKi8KCQkJJGFwcGVhcmFuY2Vfc2V0dGluZ3MgPSBhcHBseV9maWx0ZXJzKCAndW1fcHJvZmlsZV90YWJzX3NpdGVfaGVhbHRoJywgJGFwcGVhcmFuY2Vfc2V0dGluZ3MgKTsKCgkJCS8qKgoJCQkgKiBGaWx0ZXJzIGV4dGVuZCB1c2VyIHByb2ZpbGUgdGFicwoJCQkgKgoJCQkgKiBAc2luY2UgMi42LjEzCgkJCSAqIEBob29rIHVtX3Byb2ZpbGVfdGFicwoJCQkgKgoJCQkgKiBAcGFyYW0ge2FycmF5fSAkdGFicyB0YWJzIGxpc3QuCgkJCSAqCgkJCSAqIEByZXR1cm4ge2FycmF5fSB0YWJzIGxpc3QuCgkJCSAqCgkJCSAqIEBleGFtcGxlIDxjYXB0aW9uPkFkZCBvcHRpb25zIGZvciBwcm9maWxlIHRhYnMnIHByaXZhY3kuPC9jYXB0aW9uPgoJCQkgKiBmdW5jdGlvbiB1bV9wcm9maWxlX3RhYnMoICR0YWJzICkgewoJCQkgKiAgICAgLy8geW91ciBjb2RlIGhlcmUKCQkJICogICAgIHJldHVybiAkdGFiczsKCQkJICogfQoJCQkgKiBhZGRfZmlsdGVyKCAndW1fcHJvZmlsZV90YWJzJywgJ3VtX3Byb2ZpbGVfdGFicycsIDEwLCAxICk7CgkJCSAqLwoJCQkkdGFic19vcHRpb25zID0gYXBwbHlfZmlsdGVycygKCQkJCSd1bV9wcm9maWxlX3RhYnMnLAoJCQkJYXJyYXkoCgkJCQkJJ21haW4nICAgICA9PiBhcnJheSgKCQkJCQkJJ25hbWUnID0+IF9fKCAnQWJvdXQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQknaWNvbicgPT4gJ3VtLWZhaWNvbi11c2VyJywKCQkJCQkpLAoJCQkJCSdwb3N0cycgICAgPT4gYXJyYXkoCgkJCQkJCSduYW1lJyA9PiBfXyggJ1Bvc3RzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJJ2ljb24nID0+ICd1bS1mYWljb24tcGVuY2lsJywKCQkJCQkpLAoJCQkJCSdjb21tZW50cycgPT4gYXJyYXkoCgkJCQkJCSduYW1lJyA9PiBfXyggJ0NvbW1lbnRzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJJ2ljb24nID0+ICd1bS1mYWljb24tY29tbWVudCcsCgkJCQkJKSwKCQkJCSkKCQkJKTsKCgkJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1wcm9maWxlX21lbnVfZGVmYXVsdF90YWInXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1Byb2ZpbGUgbWVudSBkZWZhdWx0IHRhYicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+ICR0YWJzX29wdGlvbnNbIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9tZW51X2RlZmF1bHRfdGFiJyApIF0sCgkJCSk7CgkJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1wcm9maWxlX21lbnVfaWNvbnMnXSAgICAgICA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0VuYWJsZSBtZW51IGljb25zIGluIGRlc2t0b3AgdmlldycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9tZW51X2ljb25zJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpOwoJCX0KCgkJLy8gPiBSZWdpc3RyYXRpb24gRm9ybSBzZWN0aW9uLgoJCSRyZWdpc3Rlcl90ZW1wbGF0ZXMgICAgICA9IFVNKCktPnNob3J0Y29kZXMoKS0+Z2V0X3RlbXBsYXRlcyggJ3JlZ2lzdGVyJyApOwoJCSRyZWdpc3Rlcl90ZW1wbGF0ZV9rZXkgICA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfdGVtcGxhdGUnICk7CgkJJHJlZ2lzdGVyX3RlbXBsYXRlX3RpdGxlID0gYXJyYXlfa2V5X2V4aXN0cyggJHJlZ2lzdGVyX3RlbXBsYXRlX2tleSwgJHJlZ2lzdGVyX3RlbXBsYXRlcyApID8gJHJlZ2lzdGVyX3RlbXBsYXRlc1sgJHJlZ2lzdGVyX3RlbXBsYXRlX2tleSBdIDogX18oICdObyB0ZW1wbGF0ZSBuYW1lJywgJ3VsdGltYXRlLW1lbWJlcicgKTsKCQkkcmVnaXN0ZXJfc2Vjb25kYXJ5X2J0biAgPSBVTSgpLT5vcHRpb25zKCktPmdldCggJ3JlZ2lzdGVyX3NlY29uZGFyeV9idG4nICk7CgoJCSRmb3JtX2FsaWduX29wdGlvbnMgPSBhcnJheSgKCQkJJ2NlbnRlcicgPT4gX18oICdDZW50ZXJlZCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdsZWZ0JyAgID0+IF9fKCAnTGVmdCBhbGlnbmVkJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3JpZ2h0JyAgPT4gX18oICdSaWdodCBhbGlnbmVkJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkpOwoKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcmVnaXN0ZXJfdGVtcGxhdGUnXSAgICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdSZWdpc3RyYXRpb24gRGVmYXVsdCBUZW1wbGF0ZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCS8vIHRyYW5zbGF0b3JzOiAlMSRzIC0gcmVnaXN0ZXIgdGVtcGxhdGUgbmFtZSwgJTIkcyAtIHJlZ2lzdGVyIHRlbXBsYXRlIGZpbGVuYW1lCgkJCSd2YWx1ZScgPT4gc3ByaW50ZiggX18oICclMSRzIChmaWxlbmFtZTogJTIkcy5waHApJywgJ3VsdGltYXRlLW1lbWJlcicgKSwgJHJlZ2lzdGVyX3RlbXBsYXRlX3RpdGxlLCAkcmVnaXN0ZXJfdGVtcGxhdGVfa2V5ICksCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcmVnaXN0ZXJfbWF4X3dpZHRoJ10gICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdSZWdpc3RyYXRpb24gTWF4aW11bSBXaWR0aCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdyZWdpc3Rlcl9tYXhfd2lkdGgnICksCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcmVnaXN0ZXJfYWxpZ24nXSAgICAgICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdSZWdpc3RyYXRpb24gU2hvcnRjb2RlIEFsaWdubWVudCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gJGZvcm1fYWxpZ25fb3B0aW9uc1sgVU0oKS0+b3B0aW9ucygpLT5nZXQoICdyZWdpc3Rlcl9hbGlnbicgKSBdLAoJCSk7CgkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLXJlZ2lzdGVyX2ljb25zJ10gICAgICAgICAgICA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnUmVnaXN0cmF0aW9uIEZpZWxkIEljb25zJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiAkaWNvbnNfZGlzcGxheV9vcHRpb25zWyBVTSgpLT5vcHRpb25zKCktPmdldCggJ3JlZ2lzdGVyX2ljb25zJyApIF0sCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcmVnaXN0ZXJfcHJpbWFyeV9idG5fd29yZCddID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdSZWdpc3RyYXRpb24gUHJpbWFyeSBCdXR0b24gVGV4dCAnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfcHJpbWFyeV9idG5fd29yZCcgKSwKCQkpOwoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1yZWdpc3Rlcl9zZWNvbmRhcnlfYnRuJ10gICAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ1JlZ2lzdHJhdGlvbiBTZWNvbmRhcnkgQnV0dG9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiAkcmVnaXN0ZXJfc2Vjb25kYXJ5X2J0biA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoJCWlmICggISBlbXB0eSggJHJlZ2lzdGVyX3NlY29uZGFyeV9idG4gKSApIHsKCQkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLXJlZ2lzdGVyX3NlY29uZGFyeV9idG5fd29yZCddID0gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUmVnaXN0cmF0aW9uIFNlY29uZGFyeSBCdXR0b24gVGV4dCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfc2Vjb25kYXJ5X2J0bl93b3JkJyApLAoJCQkpOwoJCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcmVnaXN0ZXJfc2Vjb25kYXJ5X2J0bl91cmwnXSAgPSBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdSZWdpc3RyYXRpb24gU2Vjb25kYXJ5IEJ1dHRvbiBVUkwnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3JlZ2lzdGVyX3NlY29uZGFyeV9idG5fdXJsJyApLAoJCQkpOwoJCX0KCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tcmVnaXN0ZXJfcm9sZSddID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdSZWdpc3RyYXRpb24gRGVmYXVsdCBSb2xlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiAhIGVtcHR5KCBVTSgpLT5vcHRpb25zKCktPmdldCggJ3JlZ2lzdGVyX3JvbGUnICkgKSA/IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfcm9sZScgKSA6IF9fKCAnRGVmYXVsdCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJKTsKCgkJLy8gPiBMb2dpbiBGb3JtIHNlY3Rpb24uCgkJJGxvZ2luX3RlbXBsYXRlcyAgICAgID0gVU0oKS0+c2hvcnRjb2RlcygpLT5nZXRfdGVtcGxhdGVzKCAnbG9naW4nICk7CgkJJGxvZ2luX3RlbXBsYXRlX2tleSAgID0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdsb2dpbl90ZW1wbGF0ZScgKTsKCQkkbG9naW5fdGVtcGxhdGVfdGl0bGUgPSBhcnJheV9rZXlfZXhpc3RzKCAkbG9naW5fdGVtcGxhdGVfa2V5LCAkbG9naW5fdGVtcGxhdGVzICkgPyAkbG9naW5fdGVtcGxhdGVzWyAkbG9naW5fdGVtcGxhdGVfa2V5IF0gOiBfXyggJ05vIHRlbXBsYXRlIG5hbWUnLCAndWx0aW1hdGUtbWVtYmVyJyApOwoJCSRsb2dpbl9zZWNvbmRhcnlfYnRuICA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnbG9naW5fc2Vjb25kYXJ5X2J0bicgKTsKCgkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLWxvZ2luX3RlbXBsYXRlJ10gICAgICAgICA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnTG9naW4gRGVmYXVsdCBUZW1wbGF0ZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCS8vIHRyYW5zbGF0b3JzOiAlMSRzIC0gbG9naW4gdGVtcGxhdGUgbmFtZSwgJTIkcyAtIGxvZ2luIHRlbXBsYXRlIGZpbGVuYW1lCgkJCSd2YWx1ZScgPT4gc3ByaW50ZiggX18oICclMSRzIChmaWxlbmFtZTogJTIkcy5waHApJywgJ3VsdGltYXRlLW1lbWJlcicgKSwgJGxvZ2luX3RlbXBsYXRlX3RpdGxlLCAkbG9naW5fdGVtcGxhdGVfa2V5ICksCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tbG9naW5fbWF4X3dpZHRoJ10gICAgICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdMb2dpbiBNYXhpbXVtIFdpZHRoJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2xvZ2luX21heF93aWR0aCcgKSwKCQkpOwoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1sb2dpbl9hbGlnbiddICAgICAgICAgICAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ0xvZ2luIFNob3J0Y29kZSBBbGlnbm1lbnQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmFsdWUnID0+ICRmb3JtX2FsaWduX29wdGlvbnNbIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnbG9naW5fYWxpZ24nICkgXSwKCQkpOwoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1sb2dpbl9pY29ucyddICAgICAgICAgICAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ0xvZ2luIEZpZWxkIEljb25zJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiAkaWNvbnNfZGlzcGxheV9vcHRpb25zWyBVTSgpLT5vcHRpb25zKCktPmdldCggJ2xvZ2luX2ljb25zJyApIF0sCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tbG9naW5fcHJpbWFyeV9idG5fd29yZCddID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdMb2dpbiBQcmltYXJ5IEJ1dHRvbiBUZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ2xvZ2luX3ByaW1hcnlfYnRuX3dvcmQnICksCgkJKTsKCQkkYXBwZWFyYW5jZV9zZXR0aW5nc1sndW0tbG9naW5fc2Vjb25kYXJ5X2J0biddICAgID0gYXJyYXkoCgkJCSdsYWJlbCcgPT4gX18oICdMb2dpbiBTZWNvbmRhcnkgQnV0dG9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3ZhbHVlJyA9PiAkbG9naW5fc2Vjb25kYXJ5X2J0biA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoJCWlmICggISBlbXB0eSggJGxvZ2luX3NlY29uZGFyeV9idG4gKSApIHsKCQkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLWxvZ2luX3NlY29uZGFyeV9idG5fd29yZCddID0gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnTG9naW4gU2Vjb25kYXJ5IEJ1dHRvbiBUZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdsb2dpbl9zZWNvbmRhcnlfYnRuX3dvcmQnICksCgkJCSk7CgkJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1sb2dpbl9zZWNvbmRhcnlfYnRuX3VybCddICA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0xvZ2luIFNlY29uZGFyeSBCdXR0b24gVVJMJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdsb2dpbl9zZWNvbmRhcnlfYnRuX3VybCcgKSwKCQkJKTsKCQl9CgkJJGFwcGVhcmFuY2Vfc2V0dGluZ3NbJ3VtLWxvZ2luX2ZvcmdvdF9wYXNzX2xpbmsnXSA9IGFycmF5KAoJCQknbGFiZWwnID0+IF9fKCAnTG9naW4gRm9yZ290IFBhc3N3b3JkIExpbmsnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnbG9naW5fZm9yZ290X3Bhc3NfbGluaycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkpOwoJCSRhcHBlYXJhbmNlX3NldHRpbmdzWyd1bS1sb2dpbl9zaG93X3JlbWVtYmVybWUnXSAgPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ1Nob3cgIlJlbWVtYmVyIE1lIicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdsb2dpbl9zaG93X3JlbWVtYmVybWUnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJKTsKCgkJLy8gTWlzYyBzZXR0aW5ncy4KCQkkbWlzY19zZXR0aW5ncyA9IGFycmF5KAoJCQkndW0tZm9ybV9hc3RlcmlzaycgICAgICAgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnU2hvdyBhbiBhc3RlcmlzayBmb3IgcmVxdWlyZWQgZmllbGRzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdmb3JtX2FzdGVyaXNrJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpLAoJCQkndW0tcHJvZmlsZV90aXRsZScgICAgICAgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnVXNlciBQcm9maWxlIFRpdGxlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gc3RyaXBzbGFzaGVzKCBVTSgpLT5vcHRpb25zKCktPmdldCggJ3Byb2ZpbGVfdGl0bGUnICkgKSwKCQkJKSwKCQkJJ3VtLXByb2ZpbGVfZGVzYycgICAgICAgICAgICAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1VzZXIgUHJvZmlsZSBEeW5hbWljIE1ldGEgRGVzY3JpcHRpb24nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBzdHJpcHNsYXNoZXMoIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncHJvZmlsZV9kZXNjJyApICksCgkJCSksCgkJCSd1bS11bV9wcm9maWxlX29iamVjdF9jYWNoZV9zdG9wJyAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdEaXNhYmxlIENhY2hlIFVzZXIgUHJvZmlsZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAndW1fcHJvZmlsZV9vYmplY3RfY2FjaGVfc3RvcCcgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLWVuYWJsZV9ibG9ja3MnICAgICAgICAgICAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0VuYWJsZSBHdXRlbmJlcmcgQmxvY2tzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdlbmFibGVfYmxvY2tzJyApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkpLAoJCQkndW0tcmVzdF9hcGlfdmVyc2lvbicgICAgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQknbGFiZWwnID0+IF9fKCAnUkVTVCBBUEkgdmVyc2lvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVzdF9hcGlfdmVyc2lvbicgKSwKCQkJKSwKCQkJJ3VtLWRpc2FibGVfcmVzdHJpY3Rpb25fcHJlX3F1ZXJpZXMnID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0Rpc2FibGUgcHJlLXF1ZXJpZXMgZm9yIHJlc3RyaWN0aW9uIGNvbnRlbnQgbG9naWMgKGFkdmFuY2VkKScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZGlzYWJsZV9yZXN0cmljdGlvbl9wcmVfcXVlcmllcycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLW1lbWJlcl9kaXJlY3Rvcnlfb3duX3RhYmxlJyAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0VuYWJsZSBjdXN0b20gdGFibGUgZm9yIHVzZXJtZXRhJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdtZW1iZXJfZGlyZWN0b3J5X293bl90YWJsZScgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLXVuaW5zdGFsbF9vbl9kZWxldGUnICAgICAgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ1JlbW92ZSBEYXRhIG9uIFVuaW5zdGFsbD8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBVTSgpLT5vcHRpb25zKCktPmdldCggJ3VuaW5zdGFsbF9vbl9kZWxldGUnICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCSksCgkJKTsKCgkJLy8gU2VjdXJlIHNldHRpbmdzCgkJJHNlY3VyZV9iYW5fYWRtaW5zX2FjY291bnRzID0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdzZWN1cmVfYmFuX2FkbWluc19hY2NvdW50cycgKTsKCgkJJHNlY3VyZV9zZXR0aW5ncyA9IGFycmF5KAoJCQkndW0tYmFubmVkX2NhcGFiaWxpdGllcycgICAgICAgID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0Jhbm5lZCBBZG1pbmlzdHJhdGl2ZSBDYXBhYmlsaXRpZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiBpbXBsb2RlKCAnLCAnLCBVTSgpLT5vcHRpb25zKCktPmdldCggJ2Jhbm5lZF9jYXBhYmlsaXRpZXMnICkgKSwKCQkJKSwKCQkJJ3VtLWxvY2tfcmVnaXN0ZXJfZm9ybXMnICAgICAgICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdMb2NrIEFsbCBSZWdpc3RlciBGb3JtcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnbG9ja19yZWdpc3Rlcl9mb3JtcycgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLWRpc3BsYXlfbG9naW5fZm9ybV9ub3RpY2UnICA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdEaXNwbGF5IExvZ2luIGZvcm0gbm90aWNlIHRvIHJlc2V0IHBhc3N3b3JkcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnZGlzcGxheV9sb2dpbl9mb3JtX25vdGljZScgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJKSwKCQkJJ3VtLXNlY3VyZV9iYW5fYWRtaW5zX2FjY291bnRzJyA9PiBhcnJheSgKCQkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgYmFuIGZvciBhZG1pbmlzdHJhdGl2ZSBjYXBhYmlsaXRpZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3ZhbHVlJyA9PiAkc2VjdXJlX2Jhbl9hZG1pbnNfYWNjb3VudHMgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCSksCgkJKTsKCQlpZiAoICEgZW1wdHkoICRzZWN1cmVfYmFuX2FkbWluc19hY2NvdW50cyApICkgewoJCQkkc2VjdXJlX25vdGlmeV9hZG1pbnNfYmFubmVkX2FjY291bnRzID0gVU0oKS0+b3B0aW9ucygpLT5nZXQoICdzZWN1cmVfbm90aWZ5X2FkbWluc19iYW5uZWRfYWNjb3VudHMnICk7CgoJCQkkc2VjdXJlX3NldHRpbmdzWyd1bS1zZWN1cmVfbm90aWZ5X2FkbWluc19iYW5uZWRfYWNjb3VudHMnXSA9IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ05vdGlmeSBBZG1pbmlzdHJhdG9ycycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkndmFsdWUnID0+ICRzZWN1cmVfbm90aWZ5X2FkbWluc19iYW5uZWRfYWNjb3VudHMgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCSk7CgkJCWlmICggISBlbXB0eSggJHNlY3VyZV9ub3RpZnlfYWRtaW5zX2Jhbm5lZF9hY2NvdW50cyApICkgewoJCQkJJHNlY3VyZV9ub3RpZnlfYWRtaW5zX2Jhbm5lZF9hY2NvdW50c19vcHRpb25zID0gYXJyYXkoCgkJCQkJJ2luc3RhbnQnID0+IF9fKCAnU2VuZCBJbW1lZGlhdGVseScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ2hvdXJseScgID0+IF9fKCAnSG91cmx5JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQknZGFpbHknICAgPT4gX18oICdEYWlseScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkpOwoKCQkJCSRzZWN1cmVfc2V0dGluZ3NbJ3VtLXNlY3VyZV9ub3RpZnlfYWRtaW5zX2Jhbm5lZF9hY2NvdW50c19faW50ZXJ2YWwnXSA9IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gX18oICdOb3RpZmljYXRpb24gU2NoZWR1bGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd2YWx1ZScgPT4gJHNlY3VyZV9ub3RpZnlfYWRtaW5zX2Jhbm5lZF9hY2NvdW50c19vcHRpb25zWyBVTSgpLT5vcHRpb25zKCktPmdldCggJ3NlY3VyZV9ub3RpZnlfYWRtaW5zX2Jhbm5lZF9hY2NvdW50c19faW50ZXJ2YWwnICkgXSwKCQkJCSk7CgkJCX0KCQl9CgoJCSRzZWN1cmVfYWxsb3dlZF9yZWRpcmVjdF9ob3N0cyA9IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAnc2VjdXJlX2FsbG93ZWRfcmVkaXJlY3RfaG9zdHMnICk7CgkJJHNlY3VyZV9hbGxvd2VkX3JlZGlyZWN0X2hvc3RzID0gZXhwbG9kZSggUEhQX0VPTCwgJHNlY3VyZV9hbGxvd2VkX3JlZGlyZWN0X2hvc3RzICk7CgoJCSRzZWN1cmVfc2V0dGluZ3NbJ3VtLXNlY3VyZV9hbGxvd2VkX3JlZGlyZWN0X2hvc3RzJ10gPSBhcnJheSgKCQkJJ2xhYmVsJyA9PiBfXyggJ0FsbG93ZWQgaG9zdHMgZm9yIHNhZmUgcmVkaXJlY3QnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmFsdWUnID0+ICRzZWN1cmVfYWxsb3dlZF9yZWRpcmVjdF9ob3N0cywKCQkpOwoKCQkvLyBMaWNlbnNlcyBzZXR0aW5ncy4KCQkkbGljZW5zZV9zZXR0aW5ncyA9IGFycmF5KAoJCQkndW0tbGljZW5zZXMnID0+IGFycmF5KAoJCQkJJ2xhYmVsJyA9PiBfXyggJ0xpY2Vuc2VzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSd2YWx1ZScgPT4gYXJyYXkoKSwKCQkJKSwKCQkpOwoKCQkvKioKCQkgKiBGaWx0ZXJzIGxpY2Vuc2VzIHNldHRpbmdzIGZvciBTaXRlIEhlYWx0aC4KCQkgKgoJCSAqIEBzaW5jZSAyLjYuMTMKCQkgKiBAaG9vayB1bV9saWNlbnNlc19zaXRlX2hlYWx0aAoJCSAqCgkJICogQHBhcmFtIHthcnJheX0gJGxpY2Vuc2Vfc2V0dGluZ3MgbGljZW5zZXMgc2V0dGluZ3MgZm9yIFNpdGUgSGVhbHRoLgoJCSAqCgkJICogQHJldHVybiB7YXJyYXl9IGxpY2Vuc2VzIHNldHRpbmdzIGZvciBTaXRlIEhlYWx0aC4KCQkgKgoJCSAqIEBleGFtcGxlIDxjYXB0aW9uPkV4dGVuZCBsaWNlbnNlcyBzZXR0aW5ncyBmb3IgU2l0ZSBIZWFsdGguPC9jYXB0aW9uPgoJCSAqIGZ1bmN0aW9uIHVtX2xpY2Vuc2VzX3NpdGVfaGVhbHRoKCAkbGljZW5zZV9zZXR0aW5ncyApIHsKCQkgKiAgICAgLy8geW91ciBjb2RlIGhlcmUKCQkgKiAgICAgcmV0dXJuICRsaWNlbnNlX3NldHRpbmdzOwoJCSAqIH0KCQkgKiBhZGRfZmlsdGVyKCAndW1fbGljZW5zZXNfc2l0ZV9oZWFsdGgnLCAndW1fbGljZW5zZXNfc2l0ZV9oZWFsdGgnLCAxMCwgMSApOwoJCSAqLwoJCSRsaWNlbnNlX3NldHRpbmdzID0gYXBwbHlfZmlsdGVycyggJ3VtX2xpY2Vuc2VzX3NpdGVfaGVhbHRoJywgJGxpY2Vuc2Vfc2V0dGluZ3MgKTsKCgkJJGluZm9bJ3VsdGltYXRlLW1lbWJlciddWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKCAkaW5mb1sndWx0aW1hdGUtbWVtYmVyJ11bJ2ZpZWxkcyddLCAkcGFnZXNfc2V0dGluZ3MsICR1c2VyX3NldHRpbmdzLCAkYWNjb3VudF9zZXR0aW5ncywgJHVwbG9hZHNfc2V0dGluZ3MsICRyZXN0cmljdF9zZXR0aW5ncywgJGFjY2Vzc19vdGhlcl9zZXR0aW5ncywgJGVtYWlsX3NldHRpbmdzLCAkYXBwZWFyYW5jZV9zZXR0aW5ncywgJG1pc2Nfc2V0dGluZ3MsICRzZWN1cmVfc2V0dGluZ3MsICRsaWNlbnNlX3NldHRpbmdzICk7CgoJCS8vIFVzZXIgcm9sZXMgc2V0dGluZ3MKCQkkcm9sZXNfYXJyYXkgPSBhcnJheSgpOwoJCWZvcmVhY2ggKCAkdGhpcy0+Z2V0X3JvbGVzKCkgYXMgJGtleSA9PiAkcm9sZSApIHsKCQkJaWYgKCBzdHJwb3MoICRrZXksICd1bV8nICkgPT09IDAgKSB7CgkJCQkka2V5ID0gc3Vic3RyKCAka2V5LCAzICk7CgkJCX0KCQkJJHJvbGVtZXRhID0gJHRoaXMtPmdldF9yb2xlX21ldGEoICRrZXkgKTsKCQkJaWYgKCBmYWxzZSA9PT0gJHJvbGVtZXRhICkgewoJCQkJY29udGludWU7CgkJCX0KCQkJJHByaW9yaXR5ID0gISBlbXB0eSggJHJvbGVtZXRhWydfdW1fcHJpb3JpdHknXSApID8gJHJvbGVtZXRhWydfdW1fcHJpb3JpdHknXSA6IDA7CgoJCQkkayAgICAgICAgICAgICAgICAgPSAkcHJpb3JpdHkgLiAnLScgLiAkcm9sZTsKCQkJJHJvbGVzX2FycmF5WyAkayBdID0gJHJvbGUgLiAnKCcgLiAkcHJpb3JpdHkgLiAnKSc7CgkJfQoKCQlrcnNvcnQoICRyb2xlc19hcnJheSwgU09SVF9OVU1FUklDICk7CgoJCSRpbmZvWyd1bHRpbWF0ZS1tZW1iZXItdXNlci1yb2xlcyddID0gYXJyYXkoCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdVc2VyIHJvbGVzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2Rlc2NyaXB0aW9uJyA9PiBfXyggJ1RoaXMgZGVidWcgaW5mb3JtYXRpb24gYWJvdXQgdXNlciByb2xlcy4nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknZmllbGRzJyAgICAgID0+IGFycmF5KAoJCQkJJ3VtLXJvbGVzJyAgICAgICAgID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gX18oICdVc2VyIFJvbGVzIChwcmlvcml0eSknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd2YWx1ZScgPT4gaW1wbG9kZSggJywgJywgJHJvbGVzX2FycmF5ICksCgkJCQkpLAoJCQkJJ3VtLXJlZ2lzdGVyX3JvbGUnID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gX18oICdXb3JkUHJlc3MgRGVmYXVsdCBOZXcgVXNlciBSb2xlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndmFsdWUnID0+IGdldF9vcHRpb24oICdkZWZhdWx0X3JvbGUnICksCgkJCQkpLAoJCQkpLAoJCSk7CgoJCWZvcmVhY2ggKCAkdGhpcy0+Z2V0X3JvbGVzKCkgYXMgJGtleSA9PiAkcm9sZSApIHsKCQkJaWYgKCBzdHJwb3MoICRrZXksICd1bV8nICkgPT09IDAgKSB7CgkJCQkka2V5ID0gc3Vic3RyKCAka2V5LCAzICk7CgkJCX0KCgkJCSRyb2xlbWV0YSA9ICR0aGlzLT5nZXRfcm9sZV9tZXRhKCAka2V5ICk7CgkJCWlmICggZmFsc2UgPT09ICRyb2xlbWV0YSApIHsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdID0gYXJyYXkoCgkJCQknbGFiZWwnICAgICAgID0+ICcgLSAnIC4gJHJvbGUgLiBfXyggJyByb2xlIHNldHRpbmdzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSdkZXNjcmlwdGlvbicgPT4gX18oICdUaGlzIGRlYnVnIGluZm9ybWF0aW9uIGFib3V0IHVzZXIgcm9sZS4nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ2ZpZWxkcycgICAgICA9PiBhcnJheSgpLAoJCQkpOwoKCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2Nhbl9hY2Nlc3Nfd3BhZG1pbicsICRyb2xlbWV0YSApICkgewoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWNhbl9hY2Nlc3Nfd3BhZG1pbicgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnQ2FuIGFjY2VzcyB3cC1hZG1pbj8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAkcm9sZW1ldGFbJ191bV9jYW5fYWNjZXNzX3dwYWRtaW4nXSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJKSwKCQkJCQkpCgkJCQkpOwoJCQl9CgoJCQlpZiAoIGFycmF5X2tleV9leGlzdHMoICdfdW1fY2FuX25vdF9zZWVfYWRtaW5iYXInLCAkcm9sZW1ldGEgKSApIHsKCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJYXJyYXkoCgkJCQkJCSd1bS1jYW5fbm90X3NlZV9hZG1pbmJhcicgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnRm9yY2UgaGlkaW5nIGFkbWluYmFyIGluIGZyb250ZW5kPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX2Nhbl9ub3Rfc2VlX2FkbWluYmFyJ10gPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCQkJfQoKCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2Nhbl9lZGl0X2V2ZXJ5b25lJywgJHJvbGVtZXRhICkgKSB7CgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tY2FuX2VkaXRfZXZlcnlvbmUnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0NhbiBlZGl0IG90aGVyIG1lbWJlciBhY2NvdW50cz8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAkcm9sZW1ldGFbJ191bV9jYW5fZWRpdF9ldmVyeW9uZSddID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9jYW5fZWRpdF9ldmVyeW9uZScsICRyb2xlbWV0YSApICYmIDEgPT09IGFic2ludCggJHJvbGVtZXRhWydfdW1fY2FuX2VkaXRfZXZlcnlvbmUnXSApICkgewoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWNhbl9lZGl0X3JvbGVzJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdDYW4gZWRpdCB0aGVzZSB1c2VyIHJvbGVzIG9ubHknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAhIGVtcHR5KCAkcm9sZW1ldGFbJ191bV9jYW5fZWRpdF9yb2xlcyddICkgPyBpbXBsb2RlKCAnLCAnLCAkcm9sZW1ldGFbJ191bV9jYW5fZWRpdF9yb2xlcyddICkgOiAkbGFiZWxzWydhbGwnXSwKCQkJCQkJKSwKCQkJCQkpCgkJCQkpOwoJCQl9CgoJCQlpZiAoIGFycmF5X2tleV9leGlzdHMoICdfdW1fY2FuX2RlbGV0ZV9ldmVyeW9uZScsICRyb2xlbWV0YSApICkgewoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWNhbl9kZWxldGVfZXZlcnlvbmUnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0NhbiBkZWxldGUgb3RoZXIgbWVtYmVyIGFjY291bnRzPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX2Nhbl9kZWxldGVfZXZlcnlvbmUnXSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJKSwKCQkJCQkpCgkJCQkpOwoJCQl9CgoJCQlpZiAoIGFycmF5X2tleV9leGlzdHMoICdfdW1fY2FuX2RlbGV0ZV9ldmVyeW9uZScsICRyb2xlbWV0YSApICYmIDEgPT09IGFic2ludCggJHJvbGVtZXRhWydfdW1fY2FuX2RlbGV0ZV9ldmVyeW9uZSddICkgKSB7CgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tY2FuX2RlbGV0ZV9yb2xlcycgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnQ2FuIGRlbGV0ZSB0aGVzZSB1c2VyIHJvbGVzIG9ubHknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAhIGVtcHR5KCAkcm9sZW1ldGFbJ191bV9jYW5fZGVsZXRlX3JvbGVzJ10gKSA/IGltcGxvZGUoICcsICcsICRyb2xlbWV0YVsnX3VtX2Nhbl9kZWxldGVfcm9sZXMnXSApIDogJGxhYmVsc1snYWxsJ10sCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCQkJfQoKCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2Nhbl9lZGl0X3Byb2ZpbGUnLCAkcm9sZW1ldGEgKSApIHsKCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJYXJyYXkoCgkJCQkJCSd1bS1jYW5fZWRpdF9wcm9maWxlJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdDYW4gZWRpdCB0aGVpciBwcm9maWxlPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX2Nhbl9lZGl0X3Byb2ZpbGUnXSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJKSwKCQkJCQkpCgkJCQkpOwoJCQl9CgoJCQlpZiAoIGFycmF5X2tleV9leGlzdHMoICdfdW1fY2FuX2RlbGV0ZV9wcm9maWxlJywgJHJvbGVtZXRhICkgKSB7CgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tY2FuX2RlbGV0ZV9wcm9maWxlJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdDYW4gZGVsZXRlIHRoZWlyIGFjY291bnQ/JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gJHJvbGVtZXRhWydfdW1fY2FuX2RlbGV0ZV9wcm9maWxlJ10gPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCQkJfQoKCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2Nhbl92aWV3X2FsbCcsICRyb2xlbWV0YSApICkgewoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWNhbl92aWV3X2FsbCcgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnQ2FuIHZpZXcgb3RoZXIgbWVtYmVyIHByb2ZpbGVzPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX2Nhbl92aWV3X2FsbCddID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9jYW5fdmlld19hbGwnLCAkcm9sZW1ldGEgKSAmJiAxID09PSBhYnNpbnQoICRyb2xlbWV0YVsnX3VtX2Nhbl92aWV3X2FsbCddICkgKSB7CgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tY2FuX3ZpZXdfcm9sZXMnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0NhbiB2aWV3IHRoZXNlIHVzZXIgcm9sZXMgb25seScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICEgZW1wdHkoICRyb2xlbWV0YVsnX3VtX2Nhbl92aWV3X3JvbGVzJ10gKSA/IGltcGxvZGUoICcsICcsICRyb2xlbWV0YVsnX3VtX2Nhbl92aWV3X3JvbGVzJ10gKSA6ICRsYWJlbHNbJ2FsbCddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJCWlmICggaXNzZXQoICRyb2xlbWV0YVsnX3VtX3Byb2ZpbGVfbm9pbmRleCddICkgJiYgJycgIT09ICRyb2xlbWV0YVsnX3VtX3Byb2ZpbGVfbm9pbmRleCddICkgewoJCQkJJHByb2ZpbGVfbm9pbmRleCA9ICRyb2xlbWV0YVsnX3VtX3Byb2ZpbGVfbm9pbmRleCddID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddOwoJCQl9IGVsc2UgewoJCQkJJHByb2ZpbGVfbm9pbmRleCA9IF9fKCAnRGVmYXVsdCcsICd1bHRpbWF0ZS1tZW1iZXInICk7CgkJCX0KCQkJaWYgKCBpc3NldCggJHJvbGVtZXRhWydfdW1fZGVmYXVsdF9ob21lcGFnZSddICkgJiYgJycgIT09ICRyb2xlbWV0YVsnX3VtX2RlZmF1bHRfaG9tZXBhZ2UnXSApIHsKCQkJCSRkZWZhdWx0X2hvbWVwYWdlID0gJHJvbGVtZXRhWydfdW1fZGVmYXVsdF9ob21lcGFnZSddID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddOwoJCQl9IGVsc2UgewoJCQkJJGRlZmF1bHRfaG9tZXBhZ2UgPSBfXyggJ05vIHN1Y2ggb3B0aW9uJywgJ3VsdGltYXRlLW1lbWJlcicgKTsKCQkJfQoKCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2Nhbl9tYWtlX3ByaXZhdGVfcHJvZmlsZScsICRyb2xlbWV0YSApICkgewoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWNhbl9tYWtlX3ByaXZhdGVfcHJvZmlsZScgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnQ2FuIG1ha2UgdGhlaXIgcHJvZmlsZSBwcml2YXRlPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX2Nhbl9tYWtlX3ByaXZhdGVfcHJvZmlsZSddID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9jYW5fYWNjZXNzX3ByaXZhdGVfcHJvZmlsZScsICRyb2xlbWV0YSApICkgewoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWNhbl9hY2Nlc3NfcHJpdmF0ZV9wcm9maWxlJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdDYW4gdmlldy9hY2Nlc3MgcHJpdmF0ZSBwcm9maWxlcz8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAkcm9sZW1ldGFbJ191bV9jYW5fYWNjZXNzX3ByaXZhdGVfcHJvZmlsZSddID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCWFycmF5KAoJCQkJCSd1bS1wcm9maWxlX25vaW5kZXgnICA9PiBhcnJheSgKCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0F2b2lkIGluZGV4aW5nIHByb2ZpbGUgYnkgc2VhcmNoIGVuZ2luZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkndmFsdWUnID0+ICRwcm9maWxlX25vaW5kZXgsCgkJCQkJKSwKCQkJCQkndW0tZGVmYXVsdF9ob21lcGFnZScgPT4gYXJyYXkoCgkJCQkJCSdsYWJlbCcgPT4gX18oICdDYW4gdmlldyBkZWZhdWx0IGhvbWVwYWdlPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCSd2YWx1ZScgPT4gJGRlZmF1bHRfaG9tZXBhZ2UsCgkJCQkJKSwKCQkJCSkKCQkJKTsKCgkJCWlmICggaXNzZXQoICRyb2xlbWV0YVsnX3VtX2RlZmF1bHRfaG9tZXBhZ2UnXSApICYmIDAgPT09IGFic2ludCggJHJvbGVtZXRhWydfdW1fZGVmYXVsdF9ob21lcGFnZSddICkgKSB7CgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tcmVkaXJlY3RfaG9tZXBhZ2UnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0N1c3RvbSBIb21lcGFnZSBSZWRpcmVjdCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX3JlZGlyZWN0X2hvbWVwYWdlJ10sCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCQkJfQoKCQkJJHN0YXR1c19vcHRpb25zID0gYXJyYXkoCgkJCQknYXBwcm92ZWQnICA9PiBfXyggJ0F1dG8gQXBwcm92ZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQknY2hlY2ttYWlsJyA9PiBfXyggJ1JlcXVpcmUgRW1haWwgQWN0aXZhdGlvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkncGVuZGluZycgICA9PiBfXyggJ1JlcXVpcmUgQWRtaW4gUmV2aWV3JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJKTsKCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9zdGF0dXMnLCAkcm9sZW1ldGEgKSAmJiBpc3NldCggJHN0YXR1c19vcHRpb25zWyAkcm9sZW1ldGFbJ191bV9zdGF0dXMnXSBdICkgKSB7CgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tc3RhdHVzJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdSZWdpc3RyYXRpb24gU3RhdHVzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gJHN0YXR1c19vcHRpb25zWyAkcm9sZW1ldGFbJ191bV9zdGF0dXMnXSBdLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9zdGF0dXMnLCAkcm9sZW1ldGEgKSAmJiAnYXBwcm92ZWQnID09PSAkcm9sZW1ldGFbJ191bV9zdGF0dXMnXSApIHsKCQkJCSRhdXRvX2FwcHJvdmVfYWN0ID0gYXJyYXkoCgkJCQkJJ3JlZGlyZWN0X3Byb2ZpbGUnID0+IF9fKCAnUmVkaXJlY3QgdG8gcHJvZmlsZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ3JlZGlyZWN0X3VybCcgICAgID0+IF9fKCAnUmVkaXJlY3QgdG8gVVJMJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSk7CgoJCQkJaWYgKCBpc3NldCggJGF1dG9fYXBwcm92ZV9hY3RbICRyb2xlbWV0YVsnX3VtX2F1dG9fYXBwcm92ZV9hY3QnXSBdICkgKSB7CgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCWFycmF5KAoJCQkJCQkJJ3VtLWF1dG9fYXBwcm92ZV9hY3QnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdDdXN0b20gSG9tZXBhZ2UgUmVkaXJlY3QnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gJGF1dG9fYXBwcm92ZV9hY3RbICRyb2xlbWV0YVsnX3VtX2F1dG9fYXBwcm92ZV9hY3QnXSBdLAoJCQkJCQkJKSwKCQkJCQkJKQoJCQkJCSk7CgkJCQl9CgoJCQkJaWYgKCAncmVkaXJlY3RfdXJsJyA9PT0gJHJvbGVtZXRhWydfdW1fYXV0b19hcHByb3ZlX2FjdCddICYmIGFycmF5X2tleV9leGlzdHMoICdfdW1fYXV0b19hcHByb3ZlX3VybCcsICRyb2xlbWV0YSApICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQlhcnJheSgKCQkJCQkJCSd1bS1hdXRvX2FwcHJvdmVfdXJsJyA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnU2V0IEN1c3RvbSBSZWRpcmVjdCBVUkwnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gJHJvbGVtZXRhWydfdW1fYXV0b19hcHByb3ZlX3VybCddLAoJCQkJCQkJKSwKCQkJCQkJKQoJCQkJCSk7CgkJCQl9CgkJCX0KCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9zdGF0dXMnLCAkcm9sZW1ldGEgKSAmJiAnY2hlY2ttYWlsJyA9PT0gJHJvbGVtZXRhWydfdW1fc3RhdHVzJ10gKSB7CgkJCQkkY2hlY2ttYWlsX2FjdGlvbiA9IGFycmF5KAoJCQkJCSdzaG93X21lc3NhZ2UnID0+IF9fKCAnU2hvdyBjdXN0b20gbWVzc2FnZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ3JlZGlyZWN0X3VybCcgPT4gX18oICdSZWRpcmVjdCB0byBVUkwnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJKTsKCgkJCQlpZiAoIGFycmF5X2tleV9leGlzdHMoICdfdW1fbG9naW5fZW1haWxfYWN0aXZhdGUnLCAkcm9sZW1ldGEgKSApIHsKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJYXJyYXkoCgkJCQkJCQkndW0tbG9naW5fZW1haWxfYWN0aXZhdGUnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdMb2dpbiB1c2VyIGFmdGVyIHZhbGlkYXRpbmcgdGhlIGFjdGl2YXRpb24gbGluaz8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gJHJvbGVtZXRhWydfdW1fbG9naW5fZW1haWxfYWN0aXZhdGUnXSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJCSksCgkJCQkJCSkKCQkJCQkpOwoJCQkJfQoKCQkJCWlmICggaXNzZXQoICRjaGVja21haWxfYWN0aW9uWyAkcm9sZW1ldGFbJ191bV9jaGVja21haWxfYWN0aW9uJ10gXSApICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQlhcnJheSgKCQkJCQkJCSd1bS1jaGVja21haWxfYWN0aW9uJyA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnQWN0aW9uIHRvIGJlIHRha2VuIGFmdGVyIHJlZ2lzdHJhdGlvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiAkY2hlY2ttYWlsX2FjdGlvblsgJHJvbGVtZXRhWydfdW1fY2hlY2ttYWlsX2FjdGlvbiddIF0sCgkJCQkJCQkpLAoJCQkJCQkpCgkJCQkJKTsKCQkJCX0KCgkJCQlpZiAoICdzaG93X21lc3NhZ2UnID09PSAkcm9sZW1ldGFbJ191bV9jaGVja21haWxfYWN0aW9uJ10gKSB7CgkJCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2NoZWNrbWFpbF9tZXNzYWdlJywgJHJvbGVtZXRhICkgKSB7CgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJCWFycmF5KAoJCQkJCQkJCSd1bS1jaGVja21haWxfbWVzc2FnZScgPT4gYXJyYXkoCgkJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdQZXJzb25hbGl6ZSB0aGUgY3VzdG9tIG1lc3NhZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkndmFsdWUnID0+IHN0cmlwc2xhc2hlcyggJHJvbGVtZXRhWydfdW1fY2hlY2ttYWlsX21lc3NhZ2UnXSApLAoJCQkJCQkJCSksCgkJCQkJCQkpCgkJCQkJCSk7CgkJCQkJfQoJCQkJfSBlbHNlIHsKCQkJCQlpZiAoIGFycmF5X2tleV9leGlzdHMoICdfdW1fY2hlY2ttYWlsX3VybCcsICRyb2xlbWV0YSApICkgewoJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCQlhcnJheSgKCQkJCQkJCQkndW0tY2hlY2ttYWlsX3VybCcgPT4gYXJyYXkoCgkJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTZXQgQ3VzdG9tIFJlZGlyZWN0IFVSTCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJCSd2YWx1ZScgPT4gJHJvbGVtZXRhWydfdW1fY2hlY2ttYWlsX3VybCddLAoJCQkJCQkJCSksCgkJCQkJCQkpCgkJCQkJCSk7CgkJCQkJfQoJCQkJfQoKCQkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV91cmxfZW1haWxfYWN0aXZhdGUnLCAkcm9sZW1ldGEgKSApIHsKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJYXJyYXkoCgkJCQkJCQkndW0tdXJsX2VtYWlsX2FjdGl2YXRlJyA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnVVJMIHJlZGlyZWN0IGFmdGVyIGUtbWFpbCBhY3RpdmF0aW9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX3VybF9lbWFpbF9hY3RpdmF0ZSddLAoJCQkJCQkJKSwKCQkJCQkJKQoJCQkJCSk7CgkJCQl9CgkJCX0KCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9zdGF0dXMnLCAkcm9sZW1ldGEgKSAmJiAncGVuZGluZycgPT09ICRyb2xlbWV0YVsnX3VtX3N0YXR1cyddICkgewoJCQkJJHBlbmRpbmdfYWN0aW9uID0gYXJyYXkoCgkJCQkJJ3Nob3dfbWVzc2FnZScgPT4gX18oICdTaG93IGN1c3RvbSBtZXNzYWdlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkncmVkaXJlY3RfdXJsJyA9PiBfXyggJ1JlZGlyZWN0IHRvIFVSTCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkpOwoKCQkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9wZW5kaW5nX2FjdGlvbicsICRyb2xlbWV0YSApICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQlhcnJheSgKCQkJCQkJCSd1bS1wZW5kaW5nX2FjdGlvbicgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0FjdGlvbiB0byBiZSB0YWtlbiBhZnRlciByZWdpc3RyYXRpb24nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gJHBlbmRpbmdfYWN0aW9uWyAkcm9sZW1ldGFbJ191bV9wZW5kaW5nX2FjdGlvbiddIF0sCgkJCQkJCQkpLAoJCQkJCQkpCgkJCQkJKTsKCQkJCX0KCgkJCQlpZiAoICdzaG93X21lc3NhZ2UnID09PSAkcm9sZW1ldGFbJ191bV9wZW5kaW5nX2FjdGlvbiddICkgewoJCQkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9wZW5kaW5nX21lc3NhZ2UnLCAkcm9sZW1ldGEgKSApIHsKCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQkJYXJyYXkoCgkJCQkJCQkJJ3VtLXBlbmRpbmdfbWVzc2FnZScgPT4gYXJyYXkoCgkJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdQZXJzb25hbGl6ZSB0aGUgY3VzdG9tIG1lc3NhZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkndmFsdWUnID0+IHN0cmlwc2xhc2hlcyggJHJvbGVtZXRhWydfdW1fcGVuZGluZ19tZXNzYWdlJ10gKSwKCQkJCQkJCQkpLAoJCQkJCQkJKQoJCQkJCQkpOwoJCQkJCX0KCQkJCX0gZWxzZSB7CgkJCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX3BlbmRpbmdfdXJsJywgJHJvbGVtZXRhICkgKSB7CgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJCWFycmF5KAoJCQkJCQkJCSd1bS1wZW5kaW5nX3VybCcgPT4gYXJyYXkoCgkJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTZXQgQ3VzdG9tIFJlZGlyZWN0IFVSTCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJCSd2YWx1ZScgPT4gJHJvbGVtZXRhWydfdW1fcGVuZGluZ191cmwnXSwKCQkJCQkJCQkpLAoJCQkJCQkJKQoJCQkJCQkpOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJJGFmdGVyX2xvZ2luX29wdGlvbnMgPSBhcnJheSgKCQkJCSdyZWRpcmVjdF9wcm9maWxlJyA9PiBfXyggJ1JlZGlyZWN0IHRvIHByb2ZpbGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3JlZGlyZWN0X3VybCcgICAgID0+IF9fKCAnUmVkaXJlY3QgdG8gVVJMJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCSdyZWZyZXNoJyAgICAgICAgICA9PiBfXyggJ1JlZnJlc2ggYWN0aXZlIHBhZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3JlZGlyZWN0X2FkbWluJyAgID0+IF9fKCAnUmVkaXJlY3QgdG8gV29yZFByZXNzIEFkbWluJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJKTsKCgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9hZnRlcl9sb2dpbicsICRyb2xlbWV0YSApICYmIGlzc2V0KCAkYWZ0ZXJfbG9naW5fb3B0aW9uc1sgJHJvbGVtZXRhWydfdW1fYWZ0ZXJfbG9naW4nXSBdICkgKSB7CgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tYWZ0ZXJfbG9naW4nID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0FjdGlvbiB0byBiZSB0YWtlbiBhZnRlciBsb2dpbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRhZnRlcl9sb2dpbl9vcHRpb25zWyAkcm9sZW1ldGFbJ191bV9hZnRlcl9sb2dpbiddIF0sCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCQkJfQoKCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2xvZ2luX3JlZGlyZWN0X3VybCcsICRyb2xlbWV0YSApICYmICdyZWRpcmVjdF91cmwnID09PSAkcm9sZW1ldGFbJ191bV9sb2dpbl9yZWRpcmVjdF91cmwnXSApIHsKCQkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9wZW5kaW5nX3VybCcsICRyb2xlbWV0YSApICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQlhcnJheSgKCQkJCQkJCSd1bS1sb2dpbl9yZWRpcmVjdF91cmwnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTZXQgQ3VzdG9tIFJlZGlyZWN0IFVSTCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiAkcm9sZW1ldGFbJ191bV9sb2dpbl9yZWRpcmVjdF91cmwnXSwKCQkJCQkJCSksCgkJCQkJCSkKCQkJCQkpOwoJCQkJfQoJCQl9CgoJCQkkcmVkaXJlY3Rfb3B0aW9ucyA9IGFycmF5KAoJCQkJJ3JlZGlyZWN0X2hvbWUnID0+IF9fKCAnR28gdG8gSG9tZXBhZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ3JlZGlyZWN0X3VybCcgID0+IF9fKCAnR28gdG8gQ3VzdG9tIFVSTCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSk7CgkJCWlmICggISBpc3NldCggJHJvbGVtZXRhWydfdW1fYWZ0ZXJfbG9nb3V0J10gKSApIHsKCQkJCSRyb2xlbWV0YVsnX3VtX2FmdGVyX2xvZ291dCddID0gJ3JlZGlyZWN0X2hvbWUnOwoJCQl9CgkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9hZnRlcl9sb2dvdXQnLCAkcm9sZW1ldGEgKSAmJiBpc3NldCggJHJlZGlyZWN0X29wdGlvbnNbICRyb2xlbWV0YVsnX3VtX2FmdGVyX2xvZ291dCddIF0gKSApIHsKCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJYXJyYXkoCgkJCQkJCSd1bS1hZnRlcl9sb2dvdXQnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0FjdGlvbiB0byBiZSB0YWtlbiBhZnRlciBsb2dvdXQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAkcmVkaXJlY3Rfb3B0aW9uc1sgJHJvbGVtZXRhWydfdW1fYWZ0ZXJfbG9nb3V0J10gXSwKCQkJCQkJKSwKCQkJCQkpCgkJCQkpOwoJCQl9CgoJCQlpZiAoICdyZWRpcmVjdF91cmwnID09PSAkcm9sZW1ldGFbJ191bV9hZnRlcl9sb2dvdXQnXSApIHsKCQkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ191bV9sb2dvdXRfcmVkaXJlY3RfdXJsJywgJHJvbGVtZXRhICkgKSB7CgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCWFycmF5KAoJCQkJCQkJJ3VtLWxvZ291dF9yZWRpcmVjdF91cmwnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTZXQgQ3VzdG9tIFJlZGlyZWN0IFVSTCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiAkcm9sZW1ldGFbJ191bV9sb2dvdXRfcmVkaXJlY3RfdXJsJ10sCgkJCQkJCQkpLAoJCQkJCQkpCgkJCQkJKTsKCQkJCX0KCQkJfQoKCQkJaWYgKCAhIGlzc2V0KCAkcm9sZW1ldGFbJ191bV9hZnRlcl9kZWxldGUnXSApICkgewoJCQkJJHJvbGVtZXRhWydfdW1fYWZ0ZXJfZGVsZXRlJ10gPSAncmVkaXJlY3RfaG9tZSc7CgkJCX0KCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2FmdGVyX2RlbGV0ZScsICRyb2xlbWV0YSApICYmIGlzc2V0KCAkcmVkaXJlY3Rfb3B0aW9uc1sgJHJvbGVtZXRhWydfdW1fYWZ0ZXJfZGVsZXRlJ10gXSApICkgewoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWFmdGVyX2RlbGV0ZScgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnQWN0aW9uIHRvIGJlIHRha2VuIGFmdGVyIGFjY291bnQgaXMgZGVsZXRlZCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICRyZWRpcmVjdF9vcHRpb25zWyAkcm9sZW1ldGFbJ191bV9hZnRlcl9kZWxldGUnXSBdLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJCWlmICggJ3JlZGlyZWN0X3VybCcgPT09ICRyb2xlbWV0YVsnX3VtX2FmdGVyX2RlbGV0ZSddICkgewoJCQkJaWYgKCBhcnJheV9rZXlfZXhpc3RzKCAnX3VtX2RlbGV0ZV9yZWRpcmVjdF91cmwnLCAkcm9sZW1ldGEgKSApIHsKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJYXJyYXkoCgkJCQkJCQkndW0tZGVsZXRlX3JlZGlyZWN0X3VybCcgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1NldCBDdXN0b20gUmVkaXJlY3QgVVJMJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+ICRyb2xlbWV0YVsnX3VtX2RlbGV0ZV9yZWRpcmVjdF91cmwnXSwKCQkJCQkJCSksCgkJCQkJCSkKCQkJCQkpOwoJCQkJfQoJCQl9CgoJCQlpZiAoICEgZW1wdHkoICRyb2xlbWV0YVsnd3BfY2FwYWJpbGl0aWVzJ10gKSApIHsKCQkJCWlmICggYXJyYXlfa2V5X2V4aXN0cyggJ3dwX2NhcGFiaWxpdGllcycsICRyb2xlbWV0YSApICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQlhcnJheSgKCQkJCQkJCSd1bS13cF9jYXBhYmlsaXRpZXMnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdXUCBDYXBhYmlsaXRpZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gJHJvbGVtZXRhWyd3cF9jYXBhYmlsaXRpZXMnXSwKCQkJCQkJCSksCgkJCQkJCSkKCQkJCQkpOwoJCQkJfQoJCQl9CgoJCQkkaW5mbyA9IGFwcGx5X2ZpbHRlcnMoICd1bV9kZWJ1Z19pbmZvcm1hdGlvbl91c2VyX3JvbGUnLCAkaW5mbywgJGtleSApOwoJCX0KCgkJLy8gRm9ybXMgc2V0dGluZ3MKCQlpZiAoICEgZW1wdHkoICR0aGlzLT5nZXRfZm9ybXMoKSApICkgewoJCQkkaW5mb1sndWx0aW1hdGUtbWVtYmVyLWZvcm1zJ10gPSBhcnJheSgKCQkJCSdsYWJlbCcgICAgICAgPT4gX18oICdVbHRpbWF0ZSBNZW1iZXIgRm9ybXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJJ2Rlc2NyaXB0aW9uJyA9PiBfXyggJ1RoaXMgZGVidWcgaW5mb3JtYXRpb24gZm9yIHlvdXIgVWx0aW1hdGUgTWVtYmVyIGZvcm1zLicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQknZmllbGRzJyAgICAgID0+IGFycmF5KAoJCQkJCSd1bS1mb3JtcycgPT4gYXJyYXkoCgkJCQkJCSdsYWJlbCcgPT4gX18oICdVTSBGb3JtcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCSd2YWx1ZScgPT4gJHRoaXMtPmdldF9mb3JtcygpLAoJCQkJCSksCgkJCQkpLAoJCQkpOwoKCQkJZm9yZWFjaCAoICR0aGlzLT5nZXRfZm9ybXMoKSBhcyAka2V5ID0+ICRmb3JtICkgewoJCQkJaWYgKCBzdHJwb3MoICRrZXksICdJRCMnICkgPT09IDAgKSB7CgkJCQkJJGtleSA9IHN1YnN0ciggJGtleSwgMyApOwoJCQkJfQoKCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF0gPSBhcnJheSgKCQkJCQknbGFiZWwnICAgICAgID0+ICcgLSAnIC4gJGZvcm0gLiBfXyggJyBmb3JtIHNldHRpbmdzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQknZGVzY3JpcHRpb24nID0+IF9fKCAnVGhpcyBkZWJ1ZyBpbmZvcm1hdGlvbiBmb3IgeW91ciBVbHRpbWF0ZSBNZW1iZXIgZm9ybS4nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSdmaWVsZHMnICAgICAgPT4gYXJyYXkoCgkJCQkJCSd1bS1mb3JtLXNob3J0Y29kZScgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnU2hvcnRjb2RlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gJ1t1bHRpbWF0ZW1lbWJlciBmb3JtX2lkPSInIC4gJGtleSAuICciXScsCgkJCQkJCSksCgkJCQkJCSd1bS1tb2RlJyAgICAgICAgICAgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnVHlwZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fbW9kZScsIHRydWUgKSwKCQkJCQkJKSwKCQkJCQkpLAoJCQkJKTsKCgkJCQlpZiAoICdyZWdpc3RlcicgPT09IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fbW9kZScsIHRydWUgKSApIHsKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJYXJyYXkoCgkJCQkJCQkndW0tcmVnaXN0ZXJfcm9sZScgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1VzZXIgcmVnaXN0cmF0aW9uIHJvbGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gMCA9PT0gYWJzaW50KCBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JlZ2lzdGVyX3JvbGUnLCB0cnVlICkgKSA/ICRsYWJlbHNbJ2RlZmF1bHQnXSA6IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcmVnaXN0ZXJfcm9sZScsIHRydWUgKSwKCQkJCQkJCSksCgkJCQkJCQkndW0tcmVnaXN0ZXJfdGVtcGxhdGUnICAgICAgICAgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1RlbXBsYXRlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+IDAgPT09IGFic2ludCggZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9yZWdpc3Rlcl90ZW1wbGF0ZScsIHRydWUgKSApID8gJGxhYmVsc1snZGVmYXVsdCddIDogZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9yZWdpc3Rlcl90ZW1wbGF0ZScsIHRydWUgKSwKCQkJCQkJCSksCgkJCQkJCQkndW0tcmVnaXN0ZXJfcHJpbWFyeV9idG5fd29yZCcgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1ByaW1hcnkgQnV0dG9uIFRleHQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gISBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JlZ2lzdGVyX3ByaW1hcnlfYnRuX3dvcmQnLCB0cnVlICkgPyAkbGFiZWxzWydkZWZhdWx0J10gOiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JlZ2lzdGVyX3ByaW1hcnlfYnRuX3dvcmQnLCB0cnVlICksCgkJCQkJCQkpLAoJCQkJCQkJJ3VtLXJlZ2lzdGVyX3VzZV9nZHByJyAgICAgICAgID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgcHJpdmFjeSBwb2xpY3kgYWdyZWVtZW50JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcmVnaXN0ZXJfdXNlX2dkcHInLCB0cnVlICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCQkpLAoJCQkJCQkpCgkJCQkJKTsKCgkJCQkJaWYgKCAxID09PSBhYnNpbnQoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcmVnaXN0ZXJfdXNlX2dkcHInLCB0cnVlICkgKSApIHsKCQkJCQkJJGdkcHJfY29udGVudF9pZCA9IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcmVnaXN0ZXJfdXNlX2dkcHJfY29udGVudF9pZCcsIHRydWUgKTsKCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJCWFycmF5KAoJCQkJCQkJCSd1bS1yZWdpc3Rlcl91c2VfZ2Rwcl9jb250ZW50X2lkJyA9PiBhcnJheSgKCQkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1ByaXZhY3kgcG9saWN5IGNvbnRlbnQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkndmFsdWUnID0+ICRnZHByX2NvbnRlbnRfaWQgPyBnZXRfdGhlX3RpdGxlKCAkZ2Rwcl9jb250ZW50X2lkICkgLiAnKCcgLiAkZ2Rwcl9jb250ZW50X2lkIC4gJyknIC4gZ2V0X3RoZV9wZXJtYWxpbmsoICRnZHByX2NvbnRlbnRfaWQgKSA6ICcnLAoJCQkJCQkJCSksCgkJCQkJCQkJJ3VtLXJlZ2lzdGVyX3VzZV9nZHByX3RvZ2dsZV9zaG93JyA9PiBhcnJheSgKCQkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1RvZ2dsZSBTaG93IHRleHQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcmVnaXN0ZXJfdXNlX2dkcHJfdG9nZ2xlX3Nob3cnLCB0cnVlICksCgkJCQkJCQkJKSwKCQkJCQkJCQkndW0tcmVnaXN0ZXJfdXNlX2dkcHJfdG9nZ2xlX2hpZGUnID0+IGFycmF5KAoJCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnVG9nZ2xlIEhpZGUgdGV4dCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9yZWdpc3Rlcl91c2VfZ2Rwcl90b2dnbGVfaGlkZScsIHRydWUgKSwKCQkJCQkJCQkpLAoJCQkJCQkJCSd1bS1yZWdpc3Rlcl91c2VfZ2Rwcl9hZ3JlZW1lbnQnID0+IGFycmF5KAoJCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnQ2hlY2tib3ggYWdyZWVtZW50IGRlc2NyaXB0aW9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JlZ2lzdGVyX3VzZV9nZHByX2FncmVlbWVudCcsIHRydWUgKSwKCQkJCQkJCQkpLAoJCQkJCQkJCSd1bS1yZWdpc3Rlcl91c2VfZ2Rwcl9lcnJvcl90ZXh0JyA9PiBhcnJheSgKCQkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0Vycm9yIFRleHQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcmVnaXN0ZXJfdXNlX2dkcHJfZXJyb3JfdGV4dCcsIHRydWUgKSwKCQkJCQkJCQkpLAoJCQkJCQkJKQoJCQkJCQkpOwoJCQkJCX0KCgkJCQkJJGluZm8gPSBhcHBseV9maWx0ZXJzKCAndW1fZGVidWdfaW5mb3JtYXRpb25fcmVnaXN0ZXJfZm9ybScsICRpbmZvLCAka2V5ICk7CgoJCQkJCSRmaWVsZHMgPSBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2N1c3RvbV9maWVsZHMnLCB0cnVlICk7CgkJCQkJaWYgKCAhIGVtcHR5KCAkZmllbGRzICkgJiYgaXNfYXJyYXkoICRmaWVsZHMgKSApIHsKCQkJCQkJZm9yZWFjaCAoICRmaWVsZHMgYXMgJGZpZWxkX2tleSA9PiAkZmllbGQgKSB7CgkJCQkJCQkkZmllbGRfaW5mbyA9ICR0aGlzLT5nZXRfZmllbGRfZGF0YSggJGluZm8sICRrZXksICRmaWVsZF9rZXksICRmaWVsZCApOwoKCQkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCQkJJGZpZWxkX2luZm8KCQkJCQkJCSk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9IGVsc2VpZiAoICdsb2dpbicgPT09IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fbW9kZScsIHRydWUgKSApIHsKCQkJCQkkbG9naW5fcmVkaXJlY3Rfb3B0aW9ucyA9IGFycmF5KAoJCQkJCQknMCcgICAgICAgICAgICAgICAgPT4gX18oICdEZWZhdWx0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJJ3JlZGlyZWN0X3Byb2ZpbGUnID0+IF9fKCAnUmVkaXJlY3QgdG8gcHJvZmlsZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCSdyZWRpcmVjdF91cmwnICAgICA9PiBfXyggJ1JlZGlyZWN0IHRvIFVSTCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCSdyZWZyZXNoJyAgICAgICAgICA9PiBfXyggJ1JlZnJlc2ggYWN0aXZlIHBhZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkncmVkaXJlY3RfYWRtaW4nICAgPT4gX18oICdSZWRpcmVjdCB0byBXb3JkUHJlc3MgQWRtaW4nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSk7CgoJCQkJCSRsb2dpbl9hZnRlcl9sb2dpbiA9IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fbG9naW5fYWZ0ZXJfbG9naW4nLCB0cnVlICk7CgkJCQkJJGxvZ2luX2FmdGVyX2xvZ2luID0gJycgPT09ICRsb2dpbl9hZnRlcl9sb2dpbiA/ICcwJyA6ICRsb2dpbl9hZnRlcl9sb2dpbjsKCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCWFycmF5KAoJCQkJCQkJJ3VtLWxvZ2luX3RlbXBsYXRlJyAgICAgICAgID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdUZW1wbGF0ZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiAwID09PSBhYnNpbnQoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fbG9naW5fdGVtcGxhdGUnLCB0cnVlICkgKSA/ICRsYWJlbHNbJ2RlZmF1bHQnXSA6IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fbG9naW5fdGVtcGxhdGUnLCB0cnVlICksCgkJCQkJCQkpLAoJCQkJCQkJJ3VtLWxvZ2luX3ByaW1hcnlfYnRuX3dvcmQnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdQcmltYXJ5IEJ1dHRvbiBUZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+ICEgZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9sb2dpbl9wcmltYXJ5X2J0bl93b3JkJywgdHJ1ZSApID8gJGxhYmVsc1snZGVmYXVsdCddIDogZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9sb2dpbl9wcmltYXJ5X2J0bl93b3JkJywgdHJ1ZSApLAoJCQkJCQkJKSwKCQkJCQkJCSd1bS1sb2dpbl9mb3Jnb3RfcGFzc19saW5rJyA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnU2hvdyBGb3Jnb3QgUGFzc3dvcmQgTGluaz8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9sb2dpbl9mb3Jnb3RfcGFzc19saW5rJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkJKSwKCQkJCQkJCSd1bS1sb2dpbl9zaG93X3JlbWVtYmVybWUnICA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnU2hvdyAiUmVtZW1iZXIgTWUiPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2xvZ2luX3Nob3dfcmVtZW1iZXJtZScsIHRydWUgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJCSksCgkJCQkJCQkndW0tbG9naW5fYWZ0ZXJfbG9naW4nICAgICAgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1JlZGlyZWN0aW9uIGFmdGVyIExvZ2luJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+ICRsb2dpbl9yZWRpcmVjdF9vcHRpb25zWyAkbG9naW5fYWZ0ZXJfbG9naW4gXSwKCQkJCQkJCSksCgkJCQkJCSkKCQkJCQkpOwoKCQkJCQlpZiAoICdyZWRpcmVjdF91cmwnID09PSBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2xvZ2luX2FmdGVyX2xvZ2luJywgdHJ1ZSApICkgewoJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCQlhcnJheSgKCQkJCQkJCQkndW0tbG9naW5fcmVkaXJlY3RfdXJsJyA9PiBhcnJheSgKCQkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1NldCBDdXN0b20gUmVkaXJlY3QgVVJMJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2xvZ2luX3JlZGlyZWN0X3VybCcsIHRydWUgKSwKCQkJCQkJCQkpLAoJCQkJCQkJKQoJCQkJCQkpOwoJCQkJCX0KCgkJCQkJJGluZm8gPSBhcHBseV9maWx0ZXJzKCAndW1fZGVidWdfaW5mb3JtYXRpb25fbG9naW5fZm9ybScsICRpbmZvLCAka2V5ICk7CgoJCQkJCSRmaWVsZHMgPSBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2N1c3RvbV9maWVsZHMnLCB0cnVlICk7CgkJCQkJaWYgKCAhIGVtcHR5KCAkZmllbGRzICkgJiYgaXNfYXJyYXkoICRmaWVsZHMgKSApIHsKCQkJCQkJZm9yZWFjaCAoICRmaWVsZHMgYXMgJGZpZWxkX2tleSA9PiAkZmllbGQgKSB7CgkJCQkJCQkkZmllbGRfaW5mbyA9ICR0aGlzLT5nZXRfZmllbGRfZGF0YSggJGluZm8sICRrZXksICRmaWVsZF9rZXksICRmaWVsZCApOwoKCQkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCQkJJGZpZWxkX2luZm8KCQkJCQkJCSk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9IGVsc2VpZiAoICdwcm9maWxlJyA9PT0gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9tb2RlJywgdHJ1ZSApICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQlhcnJheSgKCQkJCQkJCSd1bS1wcm9maWxlX3JvbGUnICAgICAgICAgICAgICAgICA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnTWFrZSB0aGlzIHByb2ZpbGUgZm9ybSByb2xlLXNwZWNpZmljJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+ICEgZW1wdHkoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcHJvZmlsZV9yb2xlJywgdHJ1ZSApICkgPyBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVfcm9sZScsIHRydWUgKSA6ICRsYWJlbHNbJ2FsbCddLAoJCQkJCQkJKSwKCQkJCQkJCSd1bS1wcm9maWxlX3RlbXBsYXRlJyAgICAgICAgICAgICA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnVGVtcGxhdGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gMCA9PT0gYWJzaW50KCBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVfdGVtcGxhdGUnLCB0cnVlICkgKSA/ICRsYWJlbHNbJ2RlZmF1bHQnXSA6IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcHJvZmlsZV90ZW1wbGF0ZScsIHRydWUgKSwKCQkJCQkJCSksCgkJCQkJCQkndW0tcHJvZmlsZV9wcmltYXJ5X2J0bl93b3JkJyAgICAgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1ByaW1hcnkgQnV0dG9uIFRleHQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gISBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVfcHJpbWFyeV9idG5fd29yZCcsIHRydWUgKSA/ICRsYWJlbHNbJ2RlZmF1bHQnXSA6IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcHJvZmlsZV9wcmltYXJ5X2J0bl93b3JkJywgdHJ1ZSApLAoJCQkJCQkJKSwKCQkJCQkJCSd1bS1wcm9maWxlX2NvdmVyX2VuYWJsZWQnICAgICAgICA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnRW5hYmxlIENvdmVyIFBob3RvcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVfY292ZXJfZW5hYmxlZCcsIHRydWUgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJCSksCgkJCQkJCQkndW0tcHJvZmlsZV9kaXNhYmxlX3Bob3RvX3VwbG9hZCcgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0Rpc2FibGUgUHJvZmlsZSBQaG90byBVcGxvYWQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9wcm9maWxlX2Rpc2FibGVfcGhvdG9fdXBsb2FkJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkJKSwKCQkJCQkJKQoJCQkJCSk7CgoJCQkJCWlmICggMCA9PT0gYWJzaW50KCBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVfZGlzYWJsZV9waG90b191cGxvYWQnLCB0cnVlICkgKSApIHsKCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQkJYXJyYXkoCgkJCQkJCQkJJ3VtLXByb2ZpbGVfcGhvdG9fcmVxdWlyZWQnID0+IGFycmF5KAoJCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnTWFrZSBQcm9maWxlIFBob3RvIFJlcXVpcmVkJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVfcGhvdG9fcmVxdWlyZWQnLCB0cnVlICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCQkJKSwKCQkJCQkJCSkKCQkJCQkJKTsKCQkJCQl9CgoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQlhcnJheSgKCQkJCQkJCSd1bS1wcm9maWxlX3Nob3dfbmFtZScgICAgICAgICA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnU2hvdyBkaXNwbGF5IG5hbWUgaW4gcHJvZmlsZSBoZWFkZXI/JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcHJvZmlsZV9zaG93X25hbWUnLCB0cnVlICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCQkpLAoJCQkJCQkJJ3VtLXByb2ZpbGVfc2hvd19zb2NpYWxfbGlua3MnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTaG93IHNvY2lhbCBsaW5rcyBpbiBwcm9maWxlIGhlYWRlcj8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9wcm9maWxlX3Nob3dfc29jaWFsX2xpbmtzJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkJKSwKCQkJCQkJCSd1bS1wcm9maWxlX3Nob3dfYmlvJyAgICAgICAgICA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnU2hvdyB1c2VyIGRlc2NyaXB0aW9uIGluIHByb2ZpbGUgaGVhZGVyPycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVfc2hvd19iaW8nLCB0cnVlICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCQkpLAoJCQkJCQkpCgkJCQkJKTsKCgkJCQkJJGZpZWxkcyA9IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fY3VzdG9tX2ZpZWxkcycsIHRydWUgKTsKCQkJCQlpZiAoICEgZW1wdHkoICRmaWVsZHMgKSAmJiBpc19hcnJheSggJGZpZWxkcyApICkgewoJCQkJCQlmb3JlYWNoICggJGZpZWxkcyBhcyAkZmllbGRfa2V5ID0+ICRmaWVsZCApIHsKCQkJCQkJCSRmaWVsZF9pbmZvID0gJHRoaXMtPmdldF9maWVsZF9kYXRhKCAkaW5mbywgJGtleSwgJGZpZWxkX2tleSwgJGZpZWxkICk7CgoJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJCQkkZmllbGRfaW5mbwoJCQkJCQkJKTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJJHByb2ZpbGVfbWV0YWZpZWxkcyA9IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcHJvZmlsZV9tZXRhZmllbGRzJywgdHJ1ZSApOwoJCQkJCWlmICggISBlbXB0eSggJHByb2ZpbGVfbWV0YWZpZWxkcyApICYmIGlzX2FycmF5KCAkcHJvZmlsZV9tZXRhZmllbGRzICkgKSB7CgkJCQkJCWZvcmVhY2ggKCAkcHJvZmlsZV9tZXRhZmllbGRzIGFzICRrID0+ICRmaWVsZCApIHsKCQkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCQkJYXJyYXkoCgkJCQkJCQkJCSd1bS1wcm9maWxlX21ldGFmaWVsZHMtJyAuICRrID0+IGFycmF5KAoJCQkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0ZpZWxkIHRvIHNob3cgaW4gdXNlciBtZXRhJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkJCSd2YWx1ZScgPT4gJGZpZWxkLAoJCQkJCQkJCQkpLAoJCQkJCQkJCSkKCQkJCQkJCSk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCS8vIE1lbWJlcnMgZGlyZWN0b3J5CgkJJG9wdGlvbnMgPSBhcnJheSgKCQkJJ2NvdW50cnknICAgICAgICAgICAgICA9PiBfXyggJ0NvdW50cnknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknZ2VuZGVyJyAgICAgICAgICAgICAgID0+IF9fKCAnR2VuZGVyJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2xhbmd1YWdlcycgICAgICAgICAgICA9PiBfXyggJ0xhbmd1YWdlcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdyb2xlJyAgICAgICAgICAgICAgICAgPT4gX18oICdSb2xlcycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdiaXJ0aF9kYXRlJyAgICAgICAgICAgPT4gX18oICdBZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknbGFzdF9sb2dpbicgICAgICAgICAgID0+IF9fKCAnTGFzdCBMb2dpbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd1c2VyX3JlZ2lzdGVyZWQnICAgICAgPT4gX18oICdVc2VyIFJlZ2lzdGVyZWQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknZmlyc3RfbmFtZScgICAgICAgICAgID0+IF9fKCAnRmlyc3QgTmFtZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdsYXN0X25hbWUnICAgICAgICAgICAgPT4gX18oICdMYXN0IE5hbWUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknbmlja25hbWUnICAgICAgICAgICAgID0+IF9fKCAnTmlja25hbWUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknc2Vjb25kYXJ5X3VzZXJfZW1haWwnID0+IF9fKCAnU2Vjb25kYXJ5IEUtbWFpbCBBZGRyZXNzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2Rlc2NyaXB0aW9uJyAgICAgICAgICA9PiBfXyggJ0Jpb2dyYXBoeScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdwaG9uZV9udW1iZXInICAgICAgICAgPT4gX18oICdQaG9uZSBOdW1iZXInLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknbW9iaWxlX251bWJlcicgICAgICAgID0+IF9fKCAnTW9iaWxlIE51bWJlcicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdyb2xlX3NlbGVjdCcgICAgICAgICAgPT4gX18oICdSb2xlcyAoRHJvcGRvd24pJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3JvbGVfcmFkaW8nICAgICAgICAgICA9PiBfXyggJ1JvbGVzIChSYWRpbyknLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknd2hhdHNhcHAnICAgICAgICAgICAgID0+IF9fKCAnV2hhdHNBcHAgbnVtYmVyJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2ZhY2Vib29rJyAgICAgICAgICAgICA9PiBfXyggJ0ZhY2Vib29rJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3R3aXR0ZXInICAgICAgICAgICAgICA9PiBfXyggJ1R3aXR0ZXInLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndmliZXInICAgICAgICAgICAgICAgID0+IF9fKCAnVmliZXIgbnVtYmVyJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3NreXBlJyAgICAgICAgICAgICAgICA9PiBfXyggJ1NreXBlIElEJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3RlbGVncmFtJyAgICAgICAgICAgICA9PiBfXyggJ1RlbGVncmFtJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2Rpc2NvcmQnICAgICAgICAgICAgICA9PiBfXyggJ0Rpc2NvcmQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkneW91dHViZScgICAgICAgICAgICAgID0+IF9fKCAnWW91dHViZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdzb3VuZGNsb3VkJyAgICAgICAgICAgPT4gX18oICdTb3VuZENsb3VkJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3VzZXJfcmVnaXN0ZXJlZF9kZXNjJyA9PiBfXyggJ05ldyB1c2VycyBmaXJzdCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSd1c2VyX3JlZ2lzdGVyZWRfYXNjJyAgPT4gX18oICdPbGQgdXNlcnMgZmlyc3QnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkndXNlcm5hbWUnICAgICAgICAgICAgID0+IF9fKCAnVXNlcm5hbWUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknZGlzcGxheV9uYW1lJyAgICAgICAgID0+IF9fKCAnRGlzcGxheSBuYW1lJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2xhc3RfZmlyc3RfbmFtZScgICAgICA9PiBfXyggJ0xhc3QgJiBGaXJzdCBuYW1lJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ3JhbmRvbScgICAgICAgICAgICAgICA9PiBfXyggJ1JhbmRvbScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCSdvdGhlcicgICAgICAgICAgICAgICAgPT4gX18oICdPdGhlciAoQ3VzdG9tIEZpZWxkKScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJKTsKCgkJJGluZm9bJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcmllcyddID0gYXJyYXkoCgkJCSdsYWJlbCcgICAgICAgPT4gX18oICdVbHRpbWF0ZSBNZW1iZXIgRGlyZWN0b3JpZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQknZGVzY3JpcHRpb24nID0+IF9fKCAnVGhpcyBkZWJ1ZyBpbmZvcm1hdGlvbiBhYm91dCBVbHRpbWF0ZSBNZW1iZXIgZGlyZWN0b3JpZXMuJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJJ2ZpZWxkcycgICAgICA9PiBhcnJheSgKCQkJCSd1bS1kaXJlY3RvcnknID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gX18oICdNZW1iZXIgZGlyZWN0b3JpZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd2YWx1ZScgPT4gISBlbXB0eSggJHRoaXMtPmdldF9tZW1iZXJfZGlyZWN0b3JpZXMoKSApID8gJHRoaXMtPmdldF9tZW1iZXJfZGlyZWN0b3JpZXMoKSA6ICRsYWJlbHNbJ25vLWRpciddLAoJCQkJKSwKCQkJKSwKCQkpOwoKCQlpZiAoICEgZW1wdHkoICR0aGlzLT5nZXRfbWVtYmVyX2RpcmVjdG9yaWVzKCkgKSApIHsKCQkJZm9yZWFjaCAoICR0aGlzLT5nZXRfbWVtYmVyX2RpcmVjdG9yaWVzKCkgYXMgJGtleSA9PiAkZGlyZWN0b3J5ICkgewoJCQkJaWYgKCAwID09PSBzdHJwb3MoICRrZXksICdJRCMnICkgKSB7CgkJCQkJJGtleSA9IHN1YnN0ciggJGtleSwgMyApOwoJCQkJfQoKCQkJCSR2aWV3X3R5cGUgPSBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3ZpZXdfdHlwZScsIHRydWUgKTsKCgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXSA9IGFycmF5KAoJCQkJCSdsYWJlbCcgICAgICAgPT4gJyAtICcgLiAkZGlyZWN0b3J5IC4gX18oICcgZGlyZWN0b3J5IHNldHRpbmdzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQknZGVzY3JpcHRpb24nID0+IF9fKCAnVGhpcyBkZWJ1ZyBpbmZvcm1hdGlvbiBmb3IgeW91ciBVbHRpbWF0ZSBNZW1iZXIgZGlyZWN0b3J5LicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ2ZpZWxkcycgICAgICA9PiBhcnJheSgKCQkJCQkJJ3VtLWRpcmVjdG9yeS1zaG9ydGNvZGUnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1Nob3J0Y29kZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICdbdWx0aW1hdGVtZW1iZXJfZGlyZWN0b3J5IGlkPSInIC4gJGtleSAuICciXScsCgkJCQkJCSksCgkJCQkJCSd1bS1kaXJlY3RvcnlfdGVtcGxhdGUnICA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdUZW1wbGF0ZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fZGlyZWN0b3J5X3RlbXBsYXRlJywgdHJ1ZSApID8gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9kaXJlY3RvcnlfdGVtcGxhdGUnLCB0cnVlICkgOiAkbGFiZWxzWydkZWZhdWx0J10sCgkJCQkJCSksCgkJCQkJCSd1bS1kaXJlY3Rvcnktdmlld190eXBlJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdWaWV3IHR5cGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAkdmlld190eXBlLAoJCQkJCQkpLAoJCQkJCSksCgkJCQkpOwoKCQkJCWlmICggJ2dyaWQnID09PSAkdmlld190eXBlICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXVsndW0tZGlyZWN0b3J5LWdyaWRfY29sdW1ucyddID0gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9ncmlkX2NvbHVtbnMnLCB0cnVlICk7CgkJCQl9CgoJCQkJaWYgKCBpc3NldCggJG9wdGlvbnNbIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc29ydGJ5JywgdHJ1ZSApIF0gKSApIHsKCQkJCQkkc29ydGJ5X2xhYmVsID0gJG9wdGlvbnNbIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc29ydGJ5JywgdHJ1ZSApIF07CgkJCQl9IGVsc2UgewoJCQkJCSRzb3J0YnlfbGFiZWwgPSBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3NvcnRieScsIHRydWUgKTsKCQkJCX0KCgkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJYXJyYXkoCgkJCQkJCSd1bS1kaXJlY3Rvcnktcm9sZXMnICAgICAgICAgICAgICAgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnRGVmYXVsdCB2aWV3IHR5cGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiAhIGVtcHR5KCBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JvbGVzJywgdHJ1ZSApICkgPyBpbXBsb2RlKCAnLCAnLCBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JvbGVzJywgdHJ1ZSApICkgOiAkbGFiZWxzWydhbGwnXSwKCQkJCQkJKSwKCQkJCQkJJ3VtLWRpcmVjdG9yeS1oYXNfcHJvZmlsZV9waG90bycgICA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdPbmx5IHNob3cgbWVtYmVycyB3aG8gaGF2ZSB1cGxvYWRlZCBhIHByb2ZpbGUgcGhvdG8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2hhc19wcm9maWxlX3Bob3RvJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCQkndW0tZGlyZWN0b3J5LWhhc19jb3Zlcl9waG90bycgICAgID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ09ubHkgc2hvdyBtZW1iZXJzIHdobyBoYXZlIHVwbG9hZGVkIGEgcHJvZmlsZSBwaG90bycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1faGFzX2NvdmVyX3Bob3RvJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCQkndW0tZGlyZWN0b3J5LXNob3dfdGhlc2VfdXNlcnMnICAgID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ09ubHkgc2hvdyBzcGVjaWZpYyB1c2VycyAoRW50ZXIgb25lIHVzZXJuYW1lIHBlciBsaW5lKScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+ICEgZW1wdHkoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2hvd190aGVzZV91c2VycycsIHRydWUgKSApID8gaW1wbG9kZSggJywgJywgZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9zaG93X3RoZXNlX3VzZXJzJywgdHJ1ZSApICkgOiAnJywKCQkJCQkJKSwKCQkJCQkJJ3VtLWRpcmVjdG9yeS1leGNsdWRlX3RoZXNlX3VzZXJzJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdFeGNsdWRlIHNwZWNpZmljIHVzZXJzIChFbnRlciBvbmUgdXNlcm5hbWUgcGVyIGxpbmUpJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gISBlbXB0eSggZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9leGNsdWRlX3RoZXNlX3VzZXJzJywgdHJ1ZSApICkgPyBpbXBsb2RlKCAnLCAnLCBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2V4Y2x1ZGVfdGhlc2VfdXNlcnMnLCB0cnVlICkgKSA6ICcnLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgoJCQkJJGluZm8gPSBhcHBseV9maWx0ZXJzKCAndW1fZGVidWdfbWVtYmVyX2RpcmVjdG9yeV9nZW5lcmFsX2V4dGVuZCcsICRpbmZvLCAka2V5ICk7CgoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tZGlyZWN0b3J5LXNvcnRieScgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnRGVmYXVsdCBzb3J0IHVzZXJzIGJ5JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gJHNvcnRieV9sYWJlbCwKCQkJCQkJKSwKCQkJCQkpCgkJCQkpOwoKCQkJCWlmICggJ290aGVyJyA9PT0gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9zb3J0YnknLCB0cnVlICkgKSB7CgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJYXJyYXkoCgkJCQkJCQkndW0tZGlyZWN0b3J5LXNvcnRieV9jdXN0b20nICAgICAgID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdNZXRhIGtleScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3NvcnRieV9jdXN0b20nLCB0cnVlICksCgkJCQkJCQkpLAoJCQkJCQkJJ3VtLWRpcmVjdG9yeS1zb3J0YnlfY3VzdG9tX2xhYmVsJyA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnTGFiZWwgb2YgY3VzdG9tIHNvcnQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9zb3J0YnlfY3VzdG9tX2xhYmVsJywgdHJ1ZSApLAoJCQkJCQkJKSwKCQkJCQkJCSd1bS1kaXJlY3RvcnktZW5hYmxlX3NvcnRpbmcnICAgICAgPT4gYXJyYXkoCgkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0VuYWJsZSBjdXN0b20gc29ydGluZycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2VuYWJsZV9zb3J0aW5nJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkJKSwKCQkJCQkJKQoJCQkJCSk7CgkJCQl9CgoJCQkJaWYgKCAxID09PSBhYnNpbnQoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fZW5hYmxlX3NvcnRpbmcnLCB0cnVlICkgKSApIHsKCQkJCQkkc29ydGluZ19maWVsZHMgPSBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3NvcnRpbmdfZmllbGRzJywgdHJ1ZSApOwoJCQkJCWlmICggISBlbXB0eSggJHNvcnRpbmdfZmllbGRzICkgKSB7CgkJCQkJCWZvcmVhY2ggKCAkc29ydGluZ19maWVsZHMgYXMgJGsgPT4gJGZpZWxkICkgewoJCQkJCQkJaWYgKCBpc19hcnJheSggJGZpZWxkICkgKSB7CgkJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJCQkJYXJyYXkoCgkJCQkJCQkJCQkndW0tZGlyZWN0b3J5LXNvcnRpbmdfZmllbGRzLScgLiAkayA9PiBhcnJheSgKCQkJCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnRmllbGQocykgdG8gZW5hYmxlIGluIHNvcnRpbmcnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkJCSd2YWx1ZScgPT4gX18oICdMYWJlbDogJywgJ3VsdGltYXRlLW1lbWJlcicgKSAuIGFycmF5X3ZhbHVlcyggJGZpZWxkIClbMF0gLiAnIHwgJyAuIF9fKCAnTWV0YSBrZXk6ICcsICd1bHRpbWF0ZS1tZW1iZXInICkgLiBzdHJpcHNsYXNoZXMoIGFycmF5X2tleXMoICRmaWVsZCApWzBdICksCgkJCQkJCQkJCQkpLAoJCQkJCQkJCQkpCgkJCQkJCQkJKTsKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJaWYgKCBpc3NldCggJG9wdGlvbnNbICRmaWVsZCBdICkgKSB7CgkJCQkJCQkJCSRzb3J0YnlfbGFiZWwgPSAkb3B0aW9uc1sgJGZpZWxkIF07CgkJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkJJHNvcnRieV9sYWJlbCA9ICRmaWVsZDsKCQkJCQkJCQl9CgkJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJCQkJYXJyYXkoCgkJCQkJCQkJCQkndW0tZGlyZWN0b3J5LXNvcnRpbmdfZmllbGRzLScgLiAkayA9PiBhcnJheSgKCQkJCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnRmllbGQgdG8gZW5hYmxlIGluIHNvcnRpbmcnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkJCSd2YWx1ZScgPT4gJHNvcnRieV9sYWJlbCwKCQkJCQkJCQkJCSksCgkJCQkJCQkJCSkKCQkJCQkJCQkpOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWRpcmVjdG9yeS1wcm9maWxlX3Bob3RvJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgUHJvZmlsZSBQaG90bycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcHJvZmlsZV9waG90bycsIHRydWUgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJKSwKCQkJCQkJJ3VtLWRpcmVjdG9yeS1jb3Zlcl9waG90b3MnICA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdFbmFibGUgQ292ZXIgUGhvdG8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2NvdmVyX3Bob3RvcycsIHRydWUgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJKSwKCQkJCQkJJ3VtLWRpcmVjdG9yeS1zaG93X25hbWUnICAgICA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTaG93IGRpc3BsYXkgbmFtZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2hvd19uYW1lJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgoJCQkJJGluZm8gPSBhcHBseV9maWx0ZXJzKCAndW1fZGVidWdfbWVtYmVyX2RpcmVjdG9yeV9wcm9maWxlX2V4dGVuZCcsICRpbmZvLCAka2V5ICk7CgoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tZGlyZWN0b3J5LXNob3dfdGFnbGluZScgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnU2hvdyB0YWdsaW5lIGJlbG93IHByb2ZpbGUgbmFtZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2hvd190YWdsaW5lJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgoJCQkJaWYgKCAxID09PSBhYnNpbnQoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2hvd190YWdsaW5lJywgdHJ1ZSApICkgKSB7CgkJCQkJJHRhZ2xpbmVfZmllbGRzID0gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV90YWdsaW5lX2ZpZWxkcycsIHRydWUgKTsKCQkJCQlpZiAoICEgZW1wdHkoICR0YWdsaW5lX2ZpZWxkcyApICYmIGlzX2FycmF5KCAkdGFnbGluZV9maWVsZHMgKSApIHsKCQkJCQkJZm9yZWFjaCAoICR0YWdsaW5lX2ZpZWxkcyBhcyAkayA9PiAkZmllbGQgKSB7CgkJCQkJCQkkbGFiZWwgPSBpc3NldCggJG9wdGlvbnNbICRmaWVsZCBdICkgPyAkb3B0aW9uc1sgJGZpZWxkIF0gOiAkZmllbGQ7CgkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCQkJYXJyYXkoCgkJCQkJCQkJCSd1bS1kaXJlY3RvcnktdGFnbGluZV9maWVsZHMtJyAuICRrID0+IGFycmF5KAoJCQkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0ZpZWxkIHRvIGRpc3BsYXkgaW4gdGFnbGluZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkJCQkndmFsdWUnID0+ICRsYWJlbCwKCQkJCQkJCQkJKSwKCQkJCQkJCQkpCgkJCQkJCQkpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWRpcmVjdG9yeS1zaG93X3VzZXJpbmZvJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTaG93IGV4dHJhIHVzZXIgaW5mb3JtYXRpb24gYmVsb3cgdGFnbGluZT8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Nob3dfdXNlcmluZm8nLCB0cnVlICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCgkJCQlpZiAoIDEgPT09IGFic2ludCggZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9zaG93X3VzZXJpbmZvJywgdHJ1ZSApICkgKSB7CgkJCQkJJHJldmVhbF9maWVsZHMgPSBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JldmVhbF9maWVsZHMnLCB0cnVlICk7CgkJCQkJaWYgKCAhIGVtcHR5KCAkcmV2ZWFsX2ZpZWxkcyApICYmIGlzX2FycmF5KCAkcmV2ZWFsX2ZpZWxkcyApICkgewoJCQkJCQlmb3JlYWNoICggJHJldmVhbF9maWVsZHMgYXMgJGsgPT4gJGZpZWxkICkgewoJCQkJCQkJJGxhYmVsID0gaXNzZXQoICRvcHRpb25zWyAkZmllbGQgXSApID8gJG9wdGlvbnNbICRmaWVsZCBdIDogJGZpZWxkOwoJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQkJCWFycmF5KAoJCQkJCQkJCQkndW0tZGlyZWN0b3J5LXJldmVhbF9maWVsZHMtJyAuICRrID0+IGFycmF5KAoJCQkJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0ZpZWxkIHRvIGRpc3BsYXkgaW4gZXh0cmEgdXNlciBpbmZvcm1hdGlvbiBzZWN0aW9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkJCSd2YWx1ZScgPT4gJGxhYmVsLAoJCQkJCQkJCQkpLAoJCQkJCQkJCSkKCQkJCQkJCSk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tZGlyZWN0b3J5LXNob3dfc29jaWFsJyA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdTaG93IHNvY2lhbCBjb25uZWN0IGljb25zIGluIGV4dHJhIHVzZXIgaW5mb3JtYXRpb24gc2VjdGlvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2hvd19zb2NpYWwnLCB0cnVlICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCSksCgkJCQkJCSd1bS1kaXJlY3Rvcnktc2VhcmNoJyAgICAgID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0VuYWJsZSBTZWFyY2ggZmVhdHVyZScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2VhcmNoJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgoJCQkJaWYgKCAxID09PSBhYnNpbnQoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2VhcmNoJywgdHJ1ZSApICkgKSB7CgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJYXJyYXkoCgkJCQkJCQkndW0tZGlyZWN0b3J5LXJvbGVzX2Nhbl9zZWFyY2gnID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdVc2VyIFJvbGVzIHRoYXQgY2FuIHVzZSBzZWFyY2gnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCSd2YWx1ZScgPT4gISBlbXB0eSggZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9yb2xlc19jYW5fc2VhcmNoJywgdHJ1ZSApICkgPyBpbXBsb2RlKCAnLCAnLCBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3JvbGVzX2Nhbl9zZWFyY2gnLCB0cnVlICkgKSA6ICRsYWJlbHNbJ2FsbCddLAoJCQkJCQkJKSwKCQkJCQkJKQoJCQkJCSk7CgkJCQl9CgoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tZGlyZWN0b3J5LWZpbHRlcnMnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0VuYWJsZSBGaWx0ZXJzIGZlYXR1cmUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX2ZpbHRlcnMnLCB0cnVlICkgPyAkbGFiZWxzWyd5ZXMnXSA6ICRsYWJlbHNbJ25vJ10sCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCgkJCQlpZiAoIDEgPT09IGFic2ludCggZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9maWx0ZXJzJywgdHJ1ZSApICkgKSB7CgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQkJYXJyYXkoCgkJCQkJCQkndW0tZGlyZWN0b3J5LXJvbGVzX2Nhbl9maWx0ZXInID0+IGFycmF5KAoJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdVc2VyIFJvbGVzIHRoYXQgY2FuIHVzZSBmaWx0ZXJzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+ICEgZW1wdHkoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fcm9sZXNfY2FuX2ZpbHRlcicsIHRydWUgKSApID8gaW1wbG9kZSggJywgJywgZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9yb2xlc19jYW5fZmlsdGVyJywgdHJ1ZSApICkgOiAkbGFiZWxzWydhbGwnXSwKCQkJCQkJCSksCgkJCQkJCSkKCQkJCQkpOwoKCQkJCQkkc2VhcmNoX2ZpZWxkcyA9IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2VhcmNoX2ZpZWxkcycsIHRydWUgKTsKCQkJCQlpZiAoICEgZW1wdHkoICRzZWFyY2hfZmllbGRzICkgJiYgaXNfYXJyYXkoICRzZWFyY2hfZmllbGRzICkgKSB7CgkJCQkJCWZvcmVhY2ggKCAkc2VhcmNoX2ZpZWxkcyBhcyAkayA9PiAkZmllbGQgKSB7CgkJCQkJCQkkbGFiZWwgPSBpc3NldCggJG9wdGlvbnNbICRmaWVsZCBdICkgPyAkb3B0aW9uc1sgJGZpZWxkIF0gOiAkZmllbGQ7CgkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXVsnZmllbGRzJ10gPSBhcnJheV9tZXJnZSgKCQkJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCQkJYXJyYXkoCgkJCQkJCQkJCSd1bS1kaXJlY3Rvcnktc2VhcmNoX2ZpZWxkcy0nIC4gJGsgPT4gYXJyYXkoCgkJCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnRmlsdGVyIG1ldGEgdG8gZW5hYmxlJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkJCSd2YWx1ZScgPT4gJGxhYmVsLAoJCQkJCQkJCQkpLAoJCQkJCQkJCSkKCQkJCQkJCSk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgoJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddID0gYXJyYXlfbWVyZ2UoCgkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCWFycmF5KAoJCQkJCQkndW0tZGlyZWN0b3J5LWZpbHRlcnNfZXhwYW5kZWQnID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ0V4cGFuZCB0aGUgZmlsdGVyIGJhciBieSBkZWZhdWx0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9maWx0ZXJzX2V4cGFuZGVkJywgdHJ1ZSApID8gJGxhYmVsc1sneWVzJ10gOiAkbGFiZWxzWydubyddLAoJCQkJCQkpLAoJCQkJCSkKCQkJCSk7CgoJCQkJaWYgKCAxID09PSBhYnNpbnQoIGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fZmlsdGVyc19leHBhbmRlZCcsIHRydWUgKSApICkgewoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkkaW5mb1sgJ3VsdGltYXRlLW1lbWJlci1kaXJlY3RvcnktJyAuICRrZXkgXVsnZmllbGRzJ10sCgkJCQkJCWFycmF5KAoJCQkJCQkJJ3VtLWRpcmVjdG9yeS1maWx0ZXJzX2lzX2NvbGxhcHNpYmxlJyA9PiBhcnJheSgKCQkJCQkJCQknbGFiZWwnID0+IF9fKCAnQ2FuIGZpbHRlciBiYXIgYmUgY29sbGFwc2VkJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fZmlsdGVyc19pc19jb2xsYXBzaWJsZScsIHRydWUgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJCSksCgkJCQkJCSkKCQkJCQkpOwoJCQkJfQoKCQkJCSRzZWFyY2hfZmlsdGVycyA9IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fc2VhcmNoX2ZpbHRlcnMnLCB0cnVlICk7CgkJCQlpZiAoICEgZW1wdHkoICRzZWFyY2hfZmlsdGVycyApICYmIGlzX2FycmF5KCAkc2VhcmNoX2ZpbHRlcnMgKSApIHsKCQkJCQlmb3JlYWNoICggJHNlYXJjaF9maWx0ZXJzIGFzICRrID0+ICRmaWVsZCApIHsKCQkJCQkJJGxhYmVsID0gaXNzZXQoICRvcHRpb25zWyAkayBdICkgPyAkb3B0aW9uc1sgJGsgXSA6ICRrOwoJCQkJCQkkdmFsdWUgPSAkZmllbGQ7CgkJCQkJCWlmICggaXNfYXJyYXkoICRmaWVsZCApICkgewoJCQkJCQkJJHZhbHVlID0gX18oICdGcm9tICcsICd1bHRpbWF0ZS1tZW1iZXInICkgLiAkZmllbGRbMF0gLiBfXyggJyB0byAnLCAndWx0aW1hdGUtbWVtYmVyJyApIC4gJGZpZWxkWzFdOwoJCQkJCQl9CgkJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCQkJJGluZm9bICd1bHRpbWF0ZS1tZW1iZXItZGlyZWN0b3J5LScgLiAka2V5IF1bJ2ZpZWxkcyddLAoJCQkJCQkJYXJyYXkoCgkJCQkJCQkJJ3VtLWRpcmVjdG9yeS1zZWFyY2hfZmlsdGVycy0nIC4gJGsgPT4gYXJyYXkoCgkJCQkJCQkJCSdsYWJlbCcgPT4gX18oICdBZG1pbiBmaWx0ZXJpbmcnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJCQkndmFsdWUnID0+ICRsYWJlbCAuICcgLSAnIC4gJHZhbHVlLAoJCQkJCQkJCSksCgkJCQkJCQkpCgkJCQkJCSk7CgkJCQkJfQoJCQkJfQoKCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSA9IGFycmF5X21lcmdlKAoJCQkJCSRpbmZvWyAndWx0aW1hdGUtbWVtYmVyLWRpcmVjdG9yeS0nIC4gJGtleSBdWydmaWVsZHMnXSwKCQkJCQlhcnJheSgKCQkJCQkJJ3VtLWRpcmVjdG9yeS1tdXN0X3NlYXJjaCcgICAgICAgICAgICAgID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1Nob3cgcmVzdWx0cyBvbmx5IGFmdGVyIHNlYXJjaC9maWx0cmF0aW9uJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9tdXN0X3NlYXJjaCcsIHRydWUgKSA/ICRsYWJlbHNbJ3llcyddIDogJGxhYmVsc1snbm8nXSwKCQkJCQkJKSwKCQkJCQkJJ3VtLWRpcmVjdG9yeS1tYXhfdXNlcnMnICAgICAgICAgICAgICAgID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ01heGltdW0gbnVtYmVyIG9mIHByb2ZpbGVzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9tYXhfdXNlcnMnLCB0cnVlICksCgkJCQkJCSksCgkJCQkJCSd1bS1kaXJlY3RvcnktcHJvZmlsZXNfcGVyX3BhZ2UnICAgICAgICA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdOdW1iZXIgb2YgcHJvZmlsZXMgcGVyIHBhZ2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVzX3Blcl9wYWdlJywgdHJ1ZSApLAoJCQkJCQkpLAoJCQkJCQkndW0tZGlyZWN0b3J5LXByb2ZpbGVzX3Blcl9wYWdlX21vYmlsZScgPT4gYXJyYXkoCgkJCQkJCQknbGFiZWwnID0+IF9fKCAnTWF4aW11bSBudW1iZXIgb2YgcHJvZmlsZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkJJ3ZhbHVlJyA9PiBnZXRfcG9zdF9tZXRhKCAka2V5LCAnX3VtX3Byb2ZpbGVzX3Blcl9wYWdlX21vYmlsZScsIHRydWUgKSwKCQkJCQkJKSwKCQkJCQkJJ3VtLWRpcmVjdG9yeS1kaXJlY3RvcnlfaGVhZGVyJyAgICAgICAgID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1Jlc3VsdHMgVGV4dCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fZGlyZWN0b3J5X2hlYWRlcicsIHRydWUgKSwKCQkJCQkJKSwKCQkJCQkJJ3VtLWRpcmVjdG9yeS1kaXJlY3RvcnlfaGVhZGVyX3NpbmdsZScgID0+IGFycmF5KAoJCQkJCQkJJ2xhYmVsJyA9PiBfXyggJ1NpbmdsZSBSZXN1bHQgVGV4dCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCQkndmFsdWUnID0+IGdldF9wb3N0X21ldGEoICRrZXksICdfdW1fZGlyZWN0b3J5X2hlYWRlcl9zaW5nbGUnLCB0cnVlICksCgkJCQkJCSksCgkJCQkJCSd1bS1kaXJlY3RvcnktZGlyZWN0b3J5X25vX3VzZXJzJyAgICAgICA9PiBhcnJheSgKCQkJCQkJCSdsYWJlbCcgPT4gX18oICdDdXN0b20gdGV4dCBpZiBubyB1c2VycyB3ZXJlIGZvdW5kJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkJCSd2YWx1ZScgPT4gZ2V0X3Bvc3RfbWV0YSggJGtleSwgJ191bV9kaXJlY3Rvcnlfbm9fdXNlcnMnLCB0cnVlICksCgkJCQkJCSksCgkJCQkJKQoJCQkJKTsKCgkJCQkkaW5mbyA9IGFwcGx5X2ZpbHRlcnMoICd1bV9kZWJ1Z19tZW1iZXJfZGlyZWN0b3J5X2V4dGVuZCcsICRpbmZvLCAka2V5ICk7CgkJCX0KCQl9CgoJCXJldHVybiAkaW5mbzsKCX0KfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YToxOntzOjk6Ilx1bVxhZG1pbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjk6Ilx1bVxhZG1pbiI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjU6ImFkbWluIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6MjE6Ilx1bVxhZG1pblxTaXRlX0hlYWx0aCI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18iOjExOntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyMToiXHVtXGFkbWluXFNpdGVfSGVhbHRoIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6IlNpdGVfSGVhbHRoIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoxNzoiQ2xhc3MgU2l0ZV9IZWFsdGgiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo3OiJwYWNrYWdlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo4OiJ1bVxhZG1pbiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjg6InVtXGFkbWluIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHBhcmVudCI7TjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AaW1wbGVtZW50cyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGNvbnN0YW50cyI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHByb3BlcnRpZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjg6e3M6MzY6Ilx1bVxhZG1pblxTaXRlX0hlYWx0aDo6X19jb25zdHJ1Y3QoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjQ6IlNpdGVfSGVhbHRoIGNvbnN0cnVjdG9yLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjMwO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM2OiJcdW1cYWRtaW5cU2l0ZV9IZWFsdGg6Ol9fY29uc3RydWN0KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiX19jb25zdHJ1Y3QiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czozNDoiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpnZXRfcm9sZXMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNDoiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpnZXRfcm9sZXMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6ImdldF9yb2xlcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czozNDoiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpnZXRfZm9ybXMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNDoiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpnZXRfZm9ybXMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6ImdldF9mb3JtcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czozODoiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpnZXRfcm9sZV9tZXRhKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mzg6Ilx1bVxhZG1pblxTaXRlX0hlYWx0aDo6Z2V0X3JvbGVfbWV0YSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6ImdldF9yb2xlX21ldGEiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjM6ImtleSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6MzQ6Ilx1bVxhZG1pblxTaXRlX0hlYWx0aDo6YXJyYXlfbWFwKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzQ6Ilx1bVxhZG1pblxTaXRlX0hlYWx0aDo6YXJyYXlfbWFwKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo5OiJhcnJheV9tYXAiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoiaXRlbSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQ0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6Mzk6Ilx1bVxhZG1pblxTaXRlX0hlYWx0aDo6Z2V0X2ZpZWxkX2RhdGEoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozOToiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpnZXRfZmllbGRfZGF0YSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6ImdldF9maWVsZF9kYXRhIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTo0OntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJpbmZvIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6Mzoia2V5IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToyO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6OToiZmllbGRfa2V5IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aTozO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiZmllbGQiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1MTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjQ3OiJcdW1cYWRtaW5cU2l0ZV9IZWFsdGg6OmdldF9tZW1iZXJfZGlyZWN0b3JpZXMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0NzoiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpnZXRfbWVtYmVyX2RpcmVjdG9yaWVzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMjoiZ2V0X21lbWJlcl9kaXJlY3RvcmllcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0MjoiXHVtXGFkbWluXFNpdGVfSGVhbHRoOjpkZWJ1Z19pbmZvcm1hdGlvbigpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo0MDoiQWRkIG91ciBkYXRhIHRvIFNpdGUgSGVhbHRoIGluZm9ybWF0aW9uLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcU2luY2UiOjM6e3M6NzoiACoAbmFtZSI7czo1OiJzaW5jZSI7czo1MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFNpbmNlAHZlcnNpb24iO3M6NToiMi43LjAiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6NTp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo0OiJpbmZvIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoxOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX19fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6Mjg6IlRoZSBTaXRlIEhlYWx0aCBpbmZvcm1hdGlvbi4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjI7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjE6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fX19czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MzY6IlRoZSB1cGRhdGVkIFNpdGUgSGVhbHRoIGluZm9ybWF0aW9uLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6ODI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDI6Ilx1bVxhZG1pblxTaXRlX0hlYWx0aDo6ZGVidWdfaW5mb3JtYXRpb24oKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE3OiJkZWJ1Z19pbmZvcm1hdGlvbiI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJpbmZvIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6OTE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwB1c2VkVHJhaXRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjEzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";